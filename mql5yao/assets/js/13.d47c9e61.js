(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{278:function(s,t,a){s.exports=a.p+"assets/img/depth.f9899b10.png"},460:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",[s._v(" 第十七章 自定义交易品种")]),s._v(" "),t("p",[s._v("此函数用于 创建 和 编辑 自定义交易品种的属性。")]),s._v(" "),t("p",[s._v("当客户端连接到某个交易服务器时，用户能够处理经纪平台提供的金融工具的 时间序列。 可用的金融交易品种列表显示在 市场报价 窗口中。一组独立的函数允许接收 交易品种属性，交易时段和市场深度更新等数据。")]),s._v(" "),t("p",[s._v("本部分描述的这组函数可以创建自定义交易品种。为此，用户可以使用交易服务器现有的交易品种，文本文件或外部数据源。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数")]),s._v(" "),t("th",[s._v("操作")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("CustomSymbolCreate")]),s._v(" "),t("td",[s._v("使用指定组中的指定名称创建一个自定义的交易品种")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolDelete")]),s._v(" "),t("td",[s._v("删除指定名称的自定义交易品种")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolSetInteger")]),s._v(" "),t("td",[s._v("为自定义交易品种设置 整型 属性值")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolSetDouble")]),s._v(" "),t("td",[s._v("为自定义交易品种设置 真实型 属性值")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolSetString")]),s._v(" "),t("td",[s._v("为自定义交易品种设置 字符串型 属性值")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolSetMarginRate")]),s._v(" "),t("td",[s._v("按照订单类型和方向，为自定义交易品种设置预付款比率")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolSetSessionQuote")]),s._v(" "),t("td",[s._v("为指定的交易品种和工作日设置报价时段的起止时间")])]),s._v(" "),t("tr",[t("td",[s._v("CustomSymbolSetSessionTrade")]),s._v(" "),t("td",[s._v("为指定的交易品种和工作日设置交易时段的起止时间")])]),s._v(" "),t("tr",[t("td",[s._v("CustomRatesDelete")]),s._v(" "),t("td",[s._v("删除指定时间间隔内自定义交易品种历史价格的全部K线柱图形")])]),s._v(" "),t("tr",[t("td",[s._v("CustomRatesReplace")]),s._v(" "),t("td",[s._v("以MqlRates类型数组的数据完全替换指定时间间隔内自定义交易品种的历史价格")])]),s._v(" "),t("tr",[t("td",[s._v("CustomRatesUpdate")]),s._v(" "),t("td",[s._v("将缺失的K线柱图形添加到自定义交易品种的历史价格中，并用MqlRates类型数组的数据替换现有数据")])]),s._v(" "),t("tr",[t("td",[s._v("CustomTicksAdd")]),s._v(" "),t("td",[s._v("添加MqlTick类型的数组的数据到自定义交易品种的历史价格中。自定义交易品种一定要在 市场报价 窗口中选中")])]),s._v(" "),t("tr",[t("td",[s._v("CustomTicksDelete")]),s._v(" "),t("td",[s._v("删除指定时间间隔内自定义交易品种历史价格中的全部报价")])]),s._v(" "),t("tr",[t("td",[s._v("CustomTicksReplace")]),s._v(" "),t("td",[s._v("以MqlTick类型数组的数据完全替换指定时间间隔内的自定义交易品种的历史价格")])]),s._v(" "),t("tr",[t("td",[s._v("CustomBookAdd")]),s._v(" "),t("td",[s._v("为自定义交易品种传递市场深度的状态")])])])]),s._v(" "),t("h2",{attrs:{id:"_17-1-customsymbolcreate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-customsymbolcreate"}},[s._v("#")]),s._v(" 17.1 CustomSymbolCreate")]),s._v(" "),t("p",[s._v("使用指定组中的指定名称创建一个自定义的交易品种")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolCreate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自定义交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将要创建交易品种的组的名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。它不应包含交易品种所在的组或分组。")]),s._v(" "),t("p",[s._v("symbol_path")]),s._v(" "),t("p",[s._v("[in] 交易品种所在的 组 名称。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("无论创建所在的 组 名称是什么，自定义交易品种名称都应该是独一无二的。")]),s._v(" "),t("p",[s._v('交易品种 和 组 的名称只能包含拉丁字母，不可带有标点符号，空格或特殊字符（只可以包括以下符号"."，"_"，"&" 和 "#"）。不建议使用下列字符<，>，:，"，/，|，?，*。')]),s._v(" "),t("p",[s._v("相关参考")]),s._v(" "),t("p",[s._v("SymbolName，SymbolSelect，CustomSymbolDelete")]),s._v(" "),t("h2",{attrs:{id:"_17-2-customsymboldelete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-customsymboldelete"}},[s._v("#")]),s._v(" 17.2 CustomSymbolDelete")]),s._v(" "),t("p",[s._v("删除指定名称的自定义交易品种。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolDelete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol_name          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自定义交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。不应该与现有交易品种名称相同。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("不可以删除在 市场报价 窗口显示的 或 图表已打开的 自定义交易品种。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nSymbolName，SymbolSelect，CustomSymbolCreate")]),s._v(" "),t("h2",{attrs:{id:"_17-3-customsymbolsetinteger"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-customsymbolsetinteger"}},[s._v("#")]),s._v(" 17.3 CustomSymbolSetInteger")]),s._v(" "),t("p",[s._v("为自定义交易品种设置 整型 属性值。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolSetInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string              symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   ENUM_SYMBOL_INFO_INTEGER  property_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性 ID ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      property_value    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性值 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("property_id")]),s._v(" "),t("p",[s._v("[in] 交易品种属性ID。取值范围 是ENUM_SYMBOL_INFO_INTEGER枚举值之一。")]),s._v(" "),t("p",[s._v("property_value")]),s._v(" "),t("p",[s._v("[in] 包含属性值的 长整型 变量。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nSymbolInfoInteger")]),s._v(" "),t("h2",{attrs:{id:"_17-4-customsymbolsetdouble"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-4-customsymbolsetdouble"}},[s._v("#")]),s._v(" 17.4 CustomSymbolSetDouble")]),s._v(" "),t("p",[s._v("为自定义交易品种设置 真实型 属性值。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolSetDouble")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string              symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   ENUM_SYMBOL_INFO_DOUBLE   property_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性ID ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                    property_value    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性值 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参数 symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("property_id")]),s._v(" "),t("p",[s._v("[in] 交易品种属性ID。取值范围是ENUM_SYMBOL_INFO_DOUBLE枚举值之一。")]),s._v(" "),t("p",[s._v("property_value")]),s._v(" "),t("p",[s._v("[in] 包含属性值的 双精度类型 变量。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nSymbolInfoDouble")]),s._v(" "),t("h2",{attrs:{id:"_17-5-customsymbolsetstring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-5-customsymbolsetstring"}},[s._v("#")]),s._v(" 17.5 CustomSymbolSetString")]),s._v(" "),t("p",[s._v("为自定义交易品种设置 字符串类型 属性值。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolSetString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string              symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   ENUM_SYMBOL_INFO_STRING   property_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性 ID ")]),s._v("\n   string                    property_value    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性值 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("property_id")]),s._v(" "),t("p",[s._v("[in] 交易品种属性ID。取值范围是ENUM_SYMBOL_INFO_STRING枚举值之一。")]),s._v(" "),t("p",[s._v("property_value")]),s._v(" "),t("p",[s._v("[in] 包含属性值的 字符串类型 变量。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nSymbolInfoString")]),s._v(" "),t("h2",{attrs:{id:"_17-6-customsymbolsetmarginrate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-6-customsymbolsetmarginrate"}},[s._v("#")]),s._v(" 17.6 CustomSymbolSetMarginRate")]),s._v(" "),t("p",[s._v("按照订单类型和方向，为自定义交易品种设置预付款比率。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolSetMarginRate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string       symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   ENUM_ORDER_TYPE    order_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 订单类型 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             initial_margin_rate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始预付款比率 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             maintenance_margin_rate   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 维持预付款比率 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("order_type")]),s._v(" "),t("p",[s._v("[in] 订单类型。")]),s._v(" "),t("p",[s._v("initial_margin_rate")]),s._v(" "),t("p",[s._v("[in] 具有初始预付款(保证金)比率的 双精度类型 变量。初始预付款(保证金)是指，在适当方向上进行1标准手交易的保证金。乘以初始预付款(保证金)比率后，我们会获得指定类型订单下单账户上保留的资金数额。")]),s._v(" "),t("p",[s._v("maintenance_margin_rate")]),s._v(" "),t("p",[s._v("[in] 具有维持预付款比率的 双精度类型 变量。维持预付款是指，在适当方向保持1标准手持仓的最低金额。乘以维持预付款比率后，我们会获得激活指定类型订单后账户上保留的资金数额。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nSymbolInfoMarginRate")]),s._v(" "),t("h2",{attrs:{id:"_17-7-customsymbolsetsessionquote"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-7-customsymbolsetsessionquote"}},[s._v("#")]),s._v(" 17.7 CustomSymbolSetSessionQuote")]),s._v(" "),t("p",[s._v("为指定交易品种和工作日设置指定报价时段的起止时间。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolSetSessionQuote")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string      symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   ENUM_DAY_OF_WEEK  day_of_week"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 工作日 ")]),s._v("\n   uint              session_index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 时段索引 ")]),s._v("\n   datetime          from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始时段 ")]),s._v("\n   datetime          to                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束时段 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("ENUM_DAY_OF_WEEK")]),s._v(" "),t("p",[s._v("[in] 工作日，取值范围是ENUM_DAY_OF_WEEK枚举值之一。")]),s._v(" "),t("p",[s._v("uint")]),s._v(" "),t("p",[s._v("[in] 报价时段的索引编号，设置起止时间。时段索引编号从0开始。")]),s._v(" "),t("p",[s._v("from")]),s._v(" "),t("p",[s._v("[in] 设置开始时间，时段按照00:00的格式以秒为单位计算，忽略变量中的数据值。")]),s._v(" "),t("p",[s._v("to")]),s._v(" "),t("p",[s._v("[in] 设置结束时间，时段按照00:00的格式以秒为单位计算，忽略变量中的数据值。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("如果session_index指定的时段已经存在，那么该函数只需编辑时段的起止时间。")]),s._v(" "),t("p",[s._v("如果这个时段传递的起止参数均为零(from=0 and to=0)，那么将会删除session_index对应的时段，而时段索引向下移动。")]),s._v(" "),t("p",[s._v("只能按照顺序添加时段。换句话说，只有索引编号 0 时段存在时您才能添加session_index = 1。如果打破这个规则，则不会创建新时段，而函数本身也会返回 'false'。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nSymbolInfoSessionQuote，Symbol info，TimeToStruct，Date structure")]),s._v(" "),t("h2",{attrs:{id:"_17-8-customsymbolsetsessiontrade"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-8-customsymbolsetsessiontrade"}},[s._v("#")]),s._v(" 17.8 CustomSymbolSetSessionTrade")]),s._v(" "),t("p",[s._v("为指定交易品种和工作日设置指定交易时段的起止时间")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomSymbolSetSessionTrade")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string      symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   ENUM_DAY_OF_WEEK  day_of_week"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 工作日 ")]),s._v("\n   uint              session_index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 时段索引 ")]),s._v("\n   datetime          from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始时段 ")]),s._v("\n   datetime          to                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束时段 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("symbol_name")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("ENUM_DAY_OF_WEEK")]),s._v(" "),t("p",[s._v("[in] 工作日，取值范围是ENUM_DAY_OF_WEEK枚举值之一。")]),s._v(" "),t("p",[s._v("uint")]),s._v(" "),t("p",[s._v("[in] 允许交易时段的索引编号，设置起止时间。时段索引编号从0开始。")]),s._v(" "),t("p",[s._v("from")]),s._v(" "),t("p",[s._v("[in] 设置开始时间，时段按照00:00的格式以秒为单位计算，忽略变量中的数据值。")]),s._v(" "),t("p",[s._v("to")]),s._v(" "),t("p",[s._v("[in] 设置结束时间，时段按照00:00的格式以秒为单位计算，忽略变量中的数据值。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("true —— 成功，否则 —— false。若要获得错误信息，请调用GetLastError()函数。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("如果session_index指定的时段已经存在，那么该函数只需编辑时段的起止时间。")]),s._v(" "),t("p",[s._v("如果这个时段传递的起止参数均为零(from=0 and to=0)，那么将会删除session_index对应的时段，而时段索引向下移动。")]),s._v(" "),t("p",[s._v("只能按照顺序添加时段。换句话说，只有索引编号 0 时段存在时您才能添加session_index = 1。如果打破这个规则，则不会创建新时段，而函数本身也会返回 'false'。")]),s._v(" "),t("p",[s._v("相关参考")]),s._v(" "),t("p",[s._v("SymbolInfoSessionQuote，Symbol info，TimeToStruct，Date structure")]),s._v(" "),t("h2",{attrs:{id:"_17-9-customratesdelete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-9-customratesdelete"}},[s._v("#")]),s._v(" 17.9 CustomRatesDelete")]),s._v(" "),t("p",[s._v("删除指定时间间隔内自定义交易品种历史价格的全部K线柱图形。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomRatesDelete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   datetime         from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始日期 ")]),s._v("\n   datetime         to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束日期 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlRates"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("  rates"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即将用于自定义交易品种的数据数组 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("from")]),s._v(" "),t("p",[s._v("[in] 指定删除历史价格范围内的第一根K线柱的时间。")]),s._v(" "),t("p",[s._v("to")]),s._v(" "),t("p",[s._v("[in] 指定删除历史价格范围内的最后一根K线柱的时间。")]),s._v(" "),t("p",[s._v("rates[]")]),s._v(" "),t("p",[s._v("[in] MqlRates类型历史数据数组。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("已删除柱形图的数量， 如果发生错误，则返回 -1。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nCustomRatesReplace，CustomRatesUpdate，CopyRates")]),s._v(" "),t("h2",{attrs:{id:"_17-10-customratesreplace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-10-customratesreplace"}},[s._v("#")]),s._v(" 17.10 CustomRatesReplace")]),s._v(" "),t("p",[s._v("以MqlRates类型数组的数据完全替换指定时间间隔内自定义交易品种的历史价格")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomRatesReplace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   datetime         from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始日期 ")]),s._v("\n   datetime         to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束日期 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlRates"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("  rates"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即将用于自定义交易品种的数据数组 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("from")]),s._v(" "),t("p",[s._v("[in] 指定替换历史价格范围内的第一根K线柱的时间。")]),s._v(" "),t("p",[s._v("to")]),s._v(" "),t("p",[s._v("[in] 指定替换历史价格范围内的最后一根K线柱的时间。")]),s._v(" "),t("p",[s._v("rates[]")]),s._v(" "),t("p",[s._v("[in] M1的MqlRates类型历史数据数组。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("已更新柱形图的数量，如果发生错误，则返回 -1。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("如果来自rates []数组的K线柱超出了指定的范围，它将被忽略。如果价格历史中已经存在这样的K线柱并且在给定的时间范围内，则它将被替换。当前价格历史中超出指定范围的所有其它K线柱线保持不变。 rate []数组数据在OHLC价格方面应该是正确的，而K线柱开盘时间应该与M1时间段相对应。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nCustomRatesDelete，CustomRatesUpdate，CopyRates CustomRatesUpdate")]),s._v(" "),t("p",[s._v("将缺失的K线柱图形添加到自定义交易品种的历史价格中，并用MqlRates类型数组的数据替换现有数据")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomRatesUpdate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string           symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//自定义交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlRates"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("        rates"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即将用于自定义交易品种的数据数组 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("rates[]")]),s._v(" "),t("p",[s._v("[in] M1的MqlRates类型历史数据数组。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("已更新柱形图的数量，如果发生错误，则返回 -1。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("如果指定的时间范围内，没有rates []数组中的K线柱，则会添加该K线柱图形。如果价格历史中已经存在这样的K线柱并且在给定的时间范围内，则它将被替换。当前价格历史中超出指定范围的所有其它K线柱线保持不变。 rate []数组数据在OHLC价格方面应该是正确的，而K线柱开盘时间应该与M1时间段相对应。")]),s._v(" "),t("p",[s._v("相关参考")]),s._v(" "),t("p",[s._v("CustomRatesReplace，CustomRatesDelete，CopyRates")]),s._v(" "),t("h2",{attrs:{id:"_17-11-customratesupdate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-11-customratesupdate"}},[s._v("#")]),s._v(" 17.11 CustomRatesUpdate")]),s._v(" "),t("p",[s._v("将丢失的柱形图添加到自定义交易品种历史并用MqlRates类型数组数据替换现有数据。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomRatesUpdate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//自定义交易品种名称")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlRates"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("  rates"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即将用于自定义交易品种的数据数组")]),s._v("\n   uint             count"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WHOLE_ARRAY   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即将使用的rates[]数组元素的数量")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("rates[]")]),s._v(" "),t("p",[s._v("[in] M1的MqlRates类型历史数据数组。")]),s._v(" "),t("p",[s._v("count=WHOLE_ARRAY")]),s._v(" "),t("p",[s._v("[in] 即将用于更新的rates[]数组元素的数量。WHOLE_ARRAY意味着所有rates[]数组元素都应被使用。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("已更新柱形图的数量，错误情况下为-1。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("如果当前自定义交易品种的历史中没有rates[]数组柱形图，则需要添加该柱形图。如果已存在这个柱形图，则它可被替换。当前价格历史的其他所有柱形图保持不变。有关高开低收价格应该是正确的rates[]数组数据，而开盘时间柱形图应该对应M1 时间周期。")]),s._v(" "),t("p",[s._v("另见")]),s._v(" "),t("p",[s._v("CustomRatesReplace，CustomRatesDelete，CopyRates")]),s._v(" "),t("h2",{attrs:{id:"_17-12-customticksadd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-12-customticksadd"}},[s._v("#")]),s._v(" 17.12 CustomTicksAdd")]),s._v(" "),t("p",[s._v("添加MqlTick类型的数组的数据到自定义交易品种的历史价格中。自定义交易品种一定要在 市场报价 窗口中选中")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomTicksAdd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string           symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlTick"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("         ticks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 应该应用于自定义交易品种的报价数据数组 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种的名称。")]),s._v(" "),t("p",[s._v("ticks[]")]),s._v(" "),t("p",[s._v("[in] MqlTick类型的报价数据数组按照从 最早 到 最新 的顺序排列，例如ticks[k].time_msc <= ticks[n].time_msc，if k<n。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("添加报价的数量，如果发生错误，则返回 -1。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("CustomTicksAdd函数只能用于在 市场报价 窗口打开的自定义交易品种。如果没有在市场报价窗口选择交易品种，您应该使用CustomTicksReplace添加报价。")]),s._v(" "),t("p",[s._v("MqlTick结构有两个关于时间值的字段：time (以秒表示的报价时间) 和 time_msc (以毫秒表示的报价时间)，从1970年1月1日开始计算。添加报价的这些字段按照以下顺序进行处理：")]),s._v(" "),t("ol",[t("li",[s._v("如果ticks[k].time_msc != 0，我们用它来填写ticks[k].time字段，例如为报价设置 ticks[k].time=ticks[k].time_msc/1000 (整除) 2. 如果ticks[k].time_msc == 0 并且 ticks[k].time != 0，那么将乘以1000来获得毫秒表示的时间，例如ticks[k].time_msc=ticks[k].time*1000 3. 如果ticks[k].time_msc==0和ticks[k].time==0，那么将调用CustomTicksApply函数时把当前交易服务器的毫秒时间写入这些字段。")])]),s._v(" "),t("p",[s._v("如果ticks[k].bid，ticks[k].ask，ticks[k].last或ticks[k].volume的数值大于零，那么将适当的标识组合写入ticks[k].flags 字段：")]),s._v(" "),t("p",[s._v("•TICK_FLAG_BID —— 报价已更改卖价(Bid)"),t("br"),s._v("\n•TICK_FLAG_ASK —— 报价已更改买价(Ask)"),t("br"),s._v("\n•TICK_FLAG_LAST —— 报价已更改最后交易价(last_price)"),t("br"),s._v("\n•TICK_FLAG_VOLUME —— 报价已更改交易量(volume)")]),s._v(" "),t("p",[s._v("如果字段的值 小于或等于 零，对应的标识将不写入ticks[k].flags字段。")]),s._v(" "),t("p",[s._v("标志TICK_FLAG_BUY和TICK_FLAG_SELL不会添加到自定义符号的历史记录中。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nCustomRatesDelete，CustomRatesUpdate，CustomTicksReplace， CopyTicks，CopyTicksRange")]),s._v(" "),t("h2",{attrs:{id:"_17-13-customticksdelete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-13-customticksdelete"}},[s._v("#")]),s._v(" 17.13 CustomTicksDelete")]),s._v(" "),t("p",[s._v("删除指定时间间隔内自定义交易品种历史价格中的全部报价")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomTicksDelete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   conststring      symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("             from_msc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始日期 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("             to_msc             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束日期 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("from_msc")]),s._v(" "),t("p",[s._v("[in] 指定删除历史价格范围内的第一个报价时间。单位：毫秒，从1970.01.01开始计算。")]),s._v(" "),t("p",[s._v("to_msc")]),s._v(" "),t("p",[s._v("[in] 指定删除历史价格范围内的最后一个报价时间。单位：毫秒，从1970.01.01开始计算。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("已删除报价的数量，如果发生错误，则返回 -1。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nCustomRatesDelete，CustomRatesUpdate，CustomTicksReplace， CopyTicks，CopyTicksRange")]),s._v(" "),t("h2",{attrs:{id:"_17-14-customticksreplace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-14-customticksreplace"}},[s._v("#")]),s._v(" 17.14 CustomTicksReplace")]),s._v(" "),t("p",[s._v("以MqlTick类型数组的数据完全替换指定时间间隔内的自定义交易品种的历史价格")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomTicksReplace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string     symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("             from_msc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始日期 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("             to_msc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束日期 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlTick"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("   ticks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即将用于自定义交易品种的数据数组 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("from_msc")]),s._v(" "),t("p",[s._v("[in] 指定替换历史价格范围内的第一个报价时间。单位：毫秒，从1970.01.01开始计算。")]),s._v(" "),t("p",[s._v("to_msc")]),s._v(" "),t("p",[s._v("[in] 指定替换历史价格范围内的最后一个报价时间。单位：毫秒，从1970.01.01开始计算。")]),s._v(" "),t("p",[s._v("ticks[]")]),s._v(" "),t("p",[s._v("[in] 以升序时间顺序排列的MqlTick类型报价数据数组。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("已更新报价的数量，如果发生错误，则返回 -1。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("由于在报价流中几个 跳价 可能通常具有相同的时间(精确的 跳价 时间存储在MqlTick结构的time_msc字段中)，因此CustomTicksReplace函数不会自动按时间排列ticks []数组元素。 因此，必须按时间升序预先排列 每次跳价 的数组。")]),s._v(" "),t("p",[s._v("跳价 被连续地逐日替换，直至到达在to_msc中指定的时间 或 发生错误时停止。从指定范围的第一天开始处理，然后是第二天。一旦检测到 报价时间和升序(非下降)之间的不匹配，则 跳价 替换将在当天停止。所有之前的报价都被成功替换，而当天(在错误发生的那一天)以及指定时间间隔内的所有剩余天数则保持不变。")]),s._v(" "),t("p",[s._v("如果ticks[] 数组包含任何时间的非报价数据（通常是任何时间间隔），那么使用ticks[]报价数据后，丢失数据对应的“hole”显示在自定义交易品种的历史中。换句话说，调用丢失报价的CustomTicksReplace函数等同于删除部分报价历史，就好比调用“hole”间隔的CustomTicksDelete函数。")]),s._v(" "),t("p",[s._v("如果ticks []数组在任何一天(通常是任何时间间隔)都不包含任何 跳价 数据，则应用来自ticks []的跳价数据后，自定义交易品种的历史记录中会出现与缺失数据相对应的“洞(缺口)”。 换句话说，调用CustomTicksReplace时，如果缺少 跳价 ，就相当于删除了 跳价 历史记录的一部分，就好像CustomTicksDelete带有“空洞(缺口)”间隔被调用一样。")]),s._v(" "),t("p",[s._v("相关参考"),t("br"),s._v("\nCustomRatesDelete，CustomRatesUpdate，CustomTicksDelete，CopyTicks，CopyTicksRange")]),s._v(" "),t("h2",{attrs:{id:"_17-15-custombookadd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-15-custombookadd"}},[s._v("#")]),s._v(" 17.15 CustomBookAdd")]),s._v(" "),t("p",[s._v("为自定义交易品种传递市场深度的状态。该函数可以推广市场深度，类似于价格从交易商服务器到达。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomBookAdd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string        symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 交易品种名称 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" MqlBookInfo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("  books"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 带有对市场深度元素描述的数组 ")]),s._v("\n   uint                count"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WHOLE_ARRAY  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将要使用的元素数量 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("参数")]),s._v(" "),t("p",[s._v("交易品种")]),s._v(" "),t("p",[s._v("[in] 自定义交易品种名称。")]),s._v(" "),t("p",[s._v("books[]")]),s._v(" "),t("p",[s._v("[in] MqlBookInfo数组类型数据充分描述了市场深度状态 — 所有买卖请求。该传递的市场深度状态完全取代了过去的深度。")]),s._v(" "),t("p",[s._v("count=WHOLE_ARRAY")]),s._v(" "),t("p",[s._v("[in] 将要传递到函数的'books'数组元素的数量。默认使用整个数组。")]),s._v(" "),t("p",[s._v("返回值")]),s._v(" "),t("p",[s._v("添加报价的数量或错误情况下的-1。")]),s._v(" "),t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("CustomBookAdd函数仅适用于市场深度所开放的自定义交易品种 — 通过平台界面或MarketBookAdd函数。")]),s._v(" "),t("p",[s._v("当交易品种卖价和买价加入到市场深度时，不会更新。您应该控制最佳价格的变化，并使用CustomTicksAdd将其加入到报价中。")]),s._v(" "),t("p",[s._v("检查传递数据的有效性：价格和交易量不应是负值，并且类型、价格和交易量(MqlBookInfo.volume or MqlBookInfo.volume_real)应该为每一个元素而指定。如果至少有一个市场深度元素描述错误，系统将完全丢弃传递的状态。")]),s._v(" "),t("p",[s._v("MqlBookInfo.volume_real提高精确度交易量拥有高于常规MqlBookInfo.volume的优先级。如果两个值都为市场深度元素指定，那么会使用volume_real的值。")]),s._v(" "),t("p",[s._v("MqlBookInfo元素在'books'数组中的顺序并不重要。当保存数据时，程序端将根据其价格进行排序。")]),s._v(" "),t("p",[s._v('当保存数据时，检查接收人自定义交易品种的"Book depth" (SYMBOL_TICKS_BOOKDEPTH)参数。如果在传递的市场深度中，卖出请求的数量超过该值，则丢弃超出的部分。购买请求也是如此。')]),s._v(" "),t("p",[s._v("'books'数组的采样填充：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(278),alt:""}})]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//| 专家初始化函数                          |")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("OnInit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//--- 为我们将要检索数据的交易品种启用市场深度 from")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("MarketBookAdd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INIT_SUCCEEDED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//| 专家去初始化函数                                                   |")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("OnDeinit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" reason"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//| 报价函数                                                          |")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("OnTick")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   MqlTick ticks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ArrayResize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ticks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//--- 将普通交易品种的当前价格复制到自定义交易品种 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("SymbolInfoTick")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ticks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      string symbol_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".SYN"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomTicksAdd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ticks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//| Book 函数                                                        |")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("OnBookEvent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("book_symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//--- 将普通交易品种的当前市场深度状态复制到自定义交易品种 ")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("book_symbol"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      MqlBookInfo book_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("MarketBookGet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("book_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         string symbol_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".SYN"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CustomBookAdd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("symbol_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("book_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+------------------------------------------------------------------+")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br")])]),t("p",[s._v("另见"),t("br"),s._v("\nMarketBookAdd，CustomTicksAdd， OnBookEvent")])])}),[],!1,null,null,null);t.default=e.exports}}]);