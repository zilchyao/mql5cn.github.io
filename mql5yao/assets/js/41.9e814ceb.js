(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{638:function(a,s,t){"use strict";t.r(s);var n=t(62),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",[a._v(" 第八章 数学函数")]),a._v(" "),t("p",[a._v("数学函数和三角函数")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("函数")]),a._v(" "),t("th",[a._v("功能")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("MathAbs")]),a._v(" "),t("td",[a._v("返回指定数值的绝对值(绝对值)")])]),a._v(" "),t("tr",[t("td",[a._v("MathArccos")]),a._v(" "),t("td",[a._v("以弧度形式返回x的反余弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathArcsin")]),a._v(" "),t("td",[a._v("以弧度形式返回x的反正弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathArctan")]),a._v(" "),t("td",[a._v("以弧度形式返回x的反正切")])]),a._v(" "),t("tr",[t("td",[a._v("MathCeil")]),a._v(" "),t("td",[a._v("返回距离上面最近的整数值")])]),a._v(" "),t("tr",[t("td",[a._v("MathCos")]),a._v(" "),t("td",[a._v("返回数字余弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathExp")]),a._v(" "),t("td",[a._v("返回数字指数")])]),a._v(" "),t("tr",[t("td",[a._v("MathFloor")]),a._v(" "),t("td",[a._v("返回从下面最接近的整数值")])]),a._v(" "),t("tr",[t("td",[a._v("MathLog")]),a._v(" "),t("td",[a._v("返回自然对数")])]),a._v(" "),t("tr",[t("td",[a._v("MathLog10")]),a._v(" "),t("td",[a._v("以10为底的数返回一个数的对数")])]),a._v(" "),t("tr",[t("td",[a._v("MathMax")]),a._v(" "),t("td",[a._v("返回两个数值的最大值")])]),a._v(" "),t("tr",[t("td",[a._v("MathMin")]),a._v(" "),t("td",[a._v("返回两个数值的最小值")])]),a._v(" "),t("tr",[t("td",[a._v("MathMod")]),a._v(" "),t("td",[a._v("两个数相除后返回余数。")])]),a._v(" "),t("tr",[t("td",[a._v("MathPow")]),a._v(" "),t("td",[a._v("返回以基数为底指定次方的值")])]),a._v(" "),t("tr",[t("td",[a._v("MathRand")]),a._v(" "),t("td",[a._v("在0-32767范围内返回一个随机数")])]),a._v(" "),t("tr",[t("td",[a._v("MathRound")]),a._v(" "),t("td",[a._v("四舍五入到最近整数值")])]),a._v(" "),t("tr",[t("td",[a._v("MathSin")]),a._v(" "),t("td",[a._v("返回正弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathSqrt")]),a._v(" "),t("td",[a._v("返回平方根")])]),a._v(" "),t("tr",[t("td",[a._v("MathSrand")]),a._v(" "),t("td",[a._v("设置生成一系列伪随机整数的起始点")])]),a._v(" "),t("tr",[t("td",[a._v("MathTan")]),a._v(" "),t("td",[a._v("返回正切")])]),a._v(" "),t("tr",[t("td",[a._v("MathIsValidNumber")]),a._v(" "),t("td",[a._v("检测一个数值是否为实数类型")])]),a._v(" "),t("tr",[t("td",[a._v("MathExpm1")]),a._v(" "),t("td",[a._v("返回表达式MathExp(x) - 1的值")])]),a._v(" "),t("tr",[t("td",[a._v("MathLog1p")]),a._v(" "),t("td",[a._v("返回表达式MathLog(1+x) 的值")])]),a._v(" "),t("tr",[t("td",[a._v("MathArccosh")]),a._v(" "),t("td",[a._v("返回双曲反余弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathArcsinh")]),a._v(" "),t("td",[a._v("返回双曲反正弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathArctanh")]),a._v(" "),t("td",[a._v("返回双曲反正切")])]),a._v(" "),t("tr",[t("td",[a._v("MathCosh")]),a._v(" "),t("td",[a._v("返回双曲余弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathSinh")]),a._v(" "),t("td",[a._v("返回双曲正弦")])]),a._v(" "),t("tr",[t("td",[a._v("MathTanh")]),a._v(" "),t("td",[a._v("返回双曲正切")])])])]),a._v(" "),t("h2",{attrs:{id:"_8-1-mathabs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-mathabs"}},[a._v("#")]),a._v(" 8.1 MathAbs")]),a._v(" "),t("p",[a._v("此函数返回指定数值的绝对值(求绝对值)")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathAbs( \n   double  value      // 数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 数值")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("大于 或 等于 0 的双精度类型数值")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathAbs()函数，可以使用 fabs()。")]),a._v(" "),t("h2",{attrs:{id:"_8-2-matharccos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-matharccos"}},[a._v("#")]),a._v(" 8.2 MathArccos")]),a._v(" "),t("p",[a._v("该函数返回x的反余弦弧度值，返回值的范围从0到π弧度。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathArccos( \n   double  val     // -1 < val < 1\n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("val")]),a._v(" "),t("p",[a._v("[in] val的取值范围在 -1到1之间，用来计算反余弦")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("以弧度表示的数字的余弦。 如果val小于 -1或大于1，则函数返回NaN(不确定值)。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathArccos()函数，可以使用 acos()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-3-matharcsin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-matharcsin"}},[a._v("#")]),a._v(" 8.3 MathArcsin")]),a._v(" "),t("p",[a._v("该函数返回x的反正弦弧度值，返回值的范围从 -π/ 2 到 π/ 2。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathArcsin( \n   double  val      // -1<值< 1\n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("val")]),a._v(" "),t("p",[a._v("[in] val的取值范围在 -1到1之间，计算余弦值")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("以弧度表示的数字的反正弦，范围在 -π/ 2 到 π/ 2 之间。如果参数 val小于 -1 或 大于 1，则函数返回NaN(不确定值)。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathArcsin()函数，可以使用 asin()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-4-matharctan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-matharctan"}},[a._v("#")]),a._v(" 8.4 MathArctan")]),a._v(" "),t("p",[a._v("该函数返回x的反正切弧度值，如果x等于0，函数返回0。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathArctan( \n   double  value      // 正切 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 用于求反正切的数字")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("MathArctan返回以弧度表示的数字的反正切值，范围在 -π/ 2 到 π/ 2 之间。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathArctan()函数，可以使用 atan()。")]),a._v(" "),t("h2",{attrs:{id:"_8-5-mathceil"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-mathceil"}},[a._v("#")]),a._v(" 8.5 MathCeil")]),a._v(" "),t("p",[a._v("该函数返回 等于 指定数值的一个整数，或 大于 指定数值的一个最小整数。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathCeil( \n   double  val      // 数字 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("val")]),a._v(" "),t("p",[a._v("[in] 数字值")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("如果参数 val是一个整数，则返回值 等于 val，")]),a._v(" "),t("p",[a._v("如果参数 val是一个小数，则截断小数部分，然后把整数部分 +1，返回。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathCeil()函数，可以使用 ceil()。")]),a._v(" "),t("h2",{attrs:{id:"_8-6-mathcos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-mathcos"}},[a._v("#")]),a._v(" 8.6 MathCos")]),a._v(" "),t("p",[a._v("该函数返回一个角度的余弦值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathCos( \n   double  value      // 数字 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 以弧度表示的角度。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("双精度(double)类型的值，取值范围在 -1到1之间。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathCos()函数，可以使用 cos()。")]),a._v(" "),t("h2",{attrs:{id:"_8-7-mathexp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-mathexp"}},[a._v("#")]),a._v(" 8.7 MathExp")]),a._v(" "),t("p",[a._v("函数返回以e为底的指定次幂。e就是自然对数,大约等于2.71828")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathExp( \n   double  value      // 指定次冥的数字 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参量")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 指定次冥的数字。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("一些双精度函数。在溢出的情况下，函数返回INF（无穷大），如果发生下溢，MathExp返回0。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("取代MathExp() 可以使用 exp().")]),a._v(" "),t("p",[a._v("相关参考")]),a._v(" "),t("p",[a._v("真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-8-mathfloor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-mathfloor"}},[a._v("#")]),a._v(" 8.8 MathFloor")]),a._v(" "),t("p",[a._v("该函数返回 等于 指定数值的一个整数。或 小于 指定数值的一个最大整数。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathFloor( \n   double  val     // 数字 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("val")]),a._v(" "),t("p",[a._v("[in] 数值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("如果参数 val是一个整数，则返回值 等于 val，")]),a._v(" "),t("p",[a._v("如果参数 val是一个小数，则截断小数部分，然后把整数部分 -1，返回。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathFloor()，可以使用 floor()。")]),a._v(" "),t("h2",{attrs:{id:"_8-9-mathlog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-9-mathlog"}},[a._v("#")]),a._v(" 8.9 MathLog")]),a._v(" "),t("p",[a._v("函数返回一个以 自然对数(e) 为底数，以 指定参数 的对数值。e大约等于2.71828")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathLog( \n   double  val      // 取对数的数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("val")]),a._v(" "),t("p",[a._v("[in] 用来求 对数 的数值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("在成功的情况下返回以 自然对数(e) 为底数， val的自然对数值。")]),a._v(" "),t("p",[a._v("如果val为 负值，则函数返回NaN(未定值)。")]),a._v(" "),t("p",[a._v("如果val等于0，则函数返回INF(无穷大)。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathLog()，可以使用 log()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-10-mathlog10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-10-mathlog10"}},[a._v("#")]),a._v(" 8.10 MathLog10")]),a._v(" "),t("p",[a._v("函数返回一个以 10 为底数，以 指定参数 的对数值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathLog10( \n   double  val      // 取对数的数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("val [in] 要计算其 常用对数 的数值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("在成功的情况下，返回一个以 10 为底数，val的常用对数值。")]),a._v(" "),t("p",[a._v("如果val为 负值，则函数返回NaN(未定值)。")]),a._v(" "),t("p",[a._v("如果val等于0，则函数返回INF(无穷大)。")]),a._v(" "),t("p",[a._v("注意\n代替MathLog10()，可以使用 log10()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-11-mathmax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-11-mathmax"}},[a._v("#")]),a._v(" 8.11 MathMax")]),a._v(" "),t("p",[a._v("该函数返回两个数值中的最大值。(两数取其大)")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathMax( \n   double  value1,     // 第一值 \n   double  value2      // 第二值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value1")]),a._v(" "),t("p",[a._v("[in] 第一个数字值。")]),a._v(" "),t("p",[a._v("value2")]),a._v(" "),t("p",[a._v("[in] 第二个数字值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("两个数值中的最大值。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathMax()可以使用 fmax()。 函数 fmax(), fmin()，MathMax()，MathMin() 可以使用整数型的参数，而不需要转换成双精度类型。")]),a._v(" "),t("p",[a._v("如果两个参数的类型不同，则较小类型的参数会自动转换为较大类型。返回值的类型对应于较大的类型。")]),a._v(" "),t("p",[a._v("如果传递的参数类型相同，则不执行转换。")]),a._v(" "),t("h2",{attrs:{id:"_8-12-mathmin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-12-mathmin"}},[a._v("#")]),a._v(" 8.12 MathMin")]),a._v(" "),t("p",[a._v("该函数返回两个数值中的最小值。(两数取其小)")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathMin( \n   double  value1,     // 第一值 \n   double  value2      // 第二值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value1")]),a._v(" "),t("p",[a._v("[in] 第一个数字值。")]),a._v(" "),t("p",[a._v("value2")]),a._v(" "),t("p",[a._v("[in] 第二个数字值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("两个数值中的最小值。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathMin()可以使用 fmin()。 函数 fmax(), fmin()，MathMax()，MathMin() 可以使用整数型的参数，而不需要转换成双精度类型。")]),a._v(" "),t("p",[a._v("如果两个参数的类型不同，则较小类型的参数会自动转换为较大类型。返回值的类型对应于较大的类型。")]),a._v(" "),t("p",[a._v("如果传递的参数类型相同，则不执行转换。")]),a._v(" "),t("h2",{attrs:{id:"_8-13-mathmod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-13-mathmod"}},[a._v("#")]),a._v(" 8.13 MathMod")]),a._v(" "),t("p",[a._v("函数返回两个数值相除之后的余数。(相除取余)")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathMod( \n   double  value,      // 被除数 \n   double  value2      // 除数 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 被除数。")]),a._v(" "),t("p",[a._v("Value2")]),a._v(" "),t("p",[a._v("[in] 除数。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("MathMod函数根据表达式val / y计算实数余数f，使得val = i * y + f，其中i是整数，f与val的符号相同，且f的绝对值小于绝对值 y。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("代替MathMod()，可以使用 fmod()。")]),a._v(" "),t("h2",{attrs:{id:"_8-14-mathpow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-14-mathpow"}},[a._v("#")]),a._v(" 8.14 MathPow")]),a._v(" "),t("p",[a._v("此函数返回一个底数的次冥。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathPow( \n   double  base,         // 底数  \n   double  exponent      // 次方值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("参数 base [in] 底数。 exponent [in] 次方指数值 返回值 以底数值求次方后的冥数。 注意 代替MathPow()，可以使用pow()。")]),a._v(" "),t("h2",{attrs:{id:"_8-15-mathrand"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-15-mathrand"}},[a._v("#")]),a._v(" 8.15 MathRand")]),a._v(" "),t("p",[a._v("在0到32767之间返回一个随机整数。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("int  MathRand();\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("返回值 一个整数值，在0到32767之间。 注意 有必要调用MathSrand()函数，将伪随机数的生成器设置为初始状态。 代替MathRand()，可以使用rand()。")]),a._v(" "),t("h2",{attrs:{id:"_8-16-mathround"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-16-mathround"}},[a._v("#")]),a._v(" 8.16 MathRound")]),a._v(" "),t("p",[a._v("函数四舍五入返回最接近的整数值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathRound( \n   double  value      // 全值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 四舍五入前的数值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("四舍五入到最接近的整数值。")]),a._v(" "),t("p",[a._v("注意\n代替MathRound()，可以使用 round()。")]),a._v(" "),t("h2",{attrs:{id:"_8-17-mathsin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-17-mathsin"}},[a._v("#")]),a._v(" 8.17 MathSin")]),a._v(" "),t("p",[a._v("返回指定角度的正弦值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathSin( \n   double  value      // 角度的弧度值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 角的弧度。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("返回角度的正弦值，取值范围在 -1到1之间的值。")]),a._v(" "),t("p",[a._v("注意\n代替MathSin()，可以使用sin()。")]),a._v(" "),t("h2",{attrs:{id:"_8-18-mathsqrt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-18-mathsqrt"}},[a._v("#")]),a._v(" 8.18 MathSqrt")]),a._v(" "),t("p",[a._v("返回数值的平方根。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathSqrt( \n   double  value      // 正值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数")]),a._v(" "),t("p",[a._v("value")]),a._v(" "),t("p",[a._v("[in] 一个正数值")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("平方根值。如果传递的参数值是负数的，MathSqrt返回NaN(待定值)")]),a._v(" "),t("p",[a._v("。 注意\n代替MathSqrt()，可以使用sqrt()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-19-mathsrand"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-19-mathsrand"}},[a._v("#")]),a._v(" 8.19 MathSrand")]),a._v(" "),t("p",[a._v("设置生成一系列伪随机整数的起始点。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("void  MathSrand( \n   int  seed      // 初始化数字 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nseed")]),a._v(" "),t("p",[a._v("[in] 随机数序列的起始数字。")]),a._v(" "),t("p",[a._v("返回值\n没有返回值。")]),a._v(" "),t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("MathRand()函数用于生成一个伪随机数序列。使用某个初始化数字调用MathSrand()可以始终生成相同的伪随机数序列。\n为了确保接收非重复序列，请使用MathSrand(GetTickCount())，因为GetTickCount()的值从操作系统开始的时刻开始增加，并且在49天内不会重复，直到内嵌的计数器在毫秒内溢出。使用MathSrand(TimeCurrent())是不合适的，因为TimeCurrent()函数返回最后一个跳价的时间，这可以在很长时间内保持不变，例如在周末。\n在OnInit()处理程序中，使用MathSrand()用于指标和EA程序的随机数生成器的初始化效果更好;它可以有助于您防止在OnTick() 和 OnCalculate()中多次重启生成程序。\n代替MathSrand()，可以使用srand()。")]),a._v(" "),t("p",[a._v("例如：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('#property description "The indicator shows the central limit theorem, which states:" \n#property description "The sum of a sufficiently large number of weakly dependent random variables, " \n#property description "having approximately equal magnitude (none of the summands dominates," \n#property description "or makes a determining contribution to the sum), has a distribution close to normal."\n//  该指标显示了中心极限定理，即:\n一个数量足够大的相互依赖关系弱的随机变量的和，具有大致相等的幅度(没有被加数的支配，或使所述总和判断贡献)，它的分布接近于正常。\n\n#property indicator_separate_window \n#property indicator_buffers 1 \n#property indicator_plots   1 \n//--- 图形结构属性 \n#property indicator_label1  "Label" \n#property indicator_type1   DRAW_HISTOGRAM \n#property indicator_color1  clrRoyalBlue \n#property indicator_style1  STYLE_SOLID \n#property indicator_width1  5 \n//--- 输入变量 \ninput int      sample_number=10; \n//--- 用于绘制分布图的指标缓冲区 \ndouble         LabelBuffer[]; \n//--- 订单号计数器 \ndouble         ticks_counter; \n//+------------------------------------------------------------------+ \n//| 自定义指标初始化函数                                                | \n//+------------------------------------------------------------------+ \nvoid OnInit() \n  { \n//--- 绑定数组和指标缓冲区 \n   SetIndexBuffer(0,LabelBuffer,INDICATOR_DATA); \n//--- 从现在到过去转移指标缓冲区 \n   ArraySetAsSeries(LabelBuffer,true); \n//--- 初始化随机数生成程序 \n   MathSrand(GetTickCount()); \n//--- 初始化订单号计数器 \n   ticks_counter=0; \n  } \n//+------------------------------------------------------------------+ \n//| 自定义指标迭代函数                                                 | \n//+------------------------------------------------------------------+ \nint OnCalculate(const int rates_total, \n                const int prev_calculated, \n                const datetime &time[], \n                const double &open[], \n                const double &high[], \n                const double &low[], \n                const double &close[], \n                const long &tick_volume[], \n                const long &volume[], \n                const int &spread[]) \n  { \n//--- 为零值计数器重置指标缓冲区 \n   if(ticks_counter==0) ArrayInitialize(LabelBuffer,0); \n//--- 增加计数器 \n   ticks_counter++; \n//--- 我们应该周期性的重置计数器，恢复分配 \n   if(ticks_counter>100) \n     { \n      Print("We\'ve reset the indicator values, let\'s start filling the cells once again"); \n      ticks_counter=0; \n     } \n//--- 得到从0到7三个数字总和的随机值样本 \n   for(int i=0;i<sample_number;i++)\n     { \n      //--- 计算单元标引，随机数下跌三个数字的总和 \n      int rand_index=0; \n      //--- 得到从0到7的三个随机数字 \n      for(int k=0;k < 3;k++) \n        { \n         //--- 除以7的余数将返回从0到6的值 \n         rand_index+=MathRand()%7; \n        } \n      //--- 增加rand_index单元数的值为1 \n      LabelBuffer[rand_index]++; \n     } \n//--- 退出OnCalculate() 处理程序 \n   return(rates_total); \n  }\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br"),t("span",{staticClass:"line-number"},[a._v("26")]),t("br"),t("span",{staticClass:"line-number"},[a._v("27")]),t("br"),t("span",{staticClass:"line-number"},[a._v("28")]),t("br"),t("span",{staticClass:"line-number"},[a._v("29")]),t("br"),t("span",{staticClass:"line-number"},[a._v("30")]),t("br"),t("span",{staticClass:"line-number"},[a._v("31")]),t("br"),t("span",{staticClass:"line-number"},[a._v("32")]),t("br"),t("span",{staticClass:"line-number"},[a._v("33")]),t("br"),t("span",{staticClass:"line-number"},[a._v("34")]),t("br"),t("span",{staticClass:"line-number"},[a._v("35")]),t("br"),t("span",{staticClass:"line-number"},[a._v("36")]),t("br"),t("span",{staticClass:"line-number"},[a._v("37")]),t("br"),t("span",{staticClass:"line-number"},[a._v("38")]),t("br"),t("span",{staticClass:"line-number"},[a._v("39")]),t("br"),t("span",{staticClass:"line-number"},[a._v("40")]),t("br"),t("span",{staticClass:"line-number"},[a._v("41")]),t("br"),t("span",{staticClass:"line-number"},[a._v("42")]),t("br"),t("span",{staticClass:"line-number"},[a._v("43")]),t("br"),t("span",{staticClass:"line-number"},[a._v("44")]),t("br"),t("span",{staticClass:"line-number"},[a._v("45")]),t("br"),t("span",{staticClass:"line-number"},[a._v("46")]),t("br"),t("span",{staticClass:"line-number"},[a._v("47")]),t("br"),t("span",{staticClass:"line-number"},[a._v("48")]),t("br"),t("span",{staticClass:"line-number"},[a._v("49")]),t("br"),t("span",{staticClass:"line-number"},[a._v("50")]),t("br"),t("span",{staticClass:"line-number"},[a._v("51")]),t("br"),t("span",{staticClass:"line-number"},[a._v("52")]),t("br"),t("span",{staticClass:"line-number"},[a._v("53")]),t("br"),t("span",{staticClass:"line-number"},[a._v("54")]),t("br"),t("span",{staticClass:"line-number"},[a._v("55")]),t("br"),t("span",{staticClass:"line-number"},[a._v("56")]),t("br"),t("span",{staticClass:"line-number"},[a._v("57")]),t("br"),t("span",{staticClass:"line-number"},[a._v("58")]),t("br"),t("span",{staticClass:"line-number"},[a._v("59")]),t("br"),t("span",{staticClass:"line-number"},[a._v("60")]),t("br"),t("span",{staticClass:"line-number"},[a._v("61")]),t("br"),t("span",{staticClass:"line-number"},[a._v("62")]),t("br"),t("span",{staticClass:"line-number"},[a._v("63")]),t("br"),t("span",{staticClass:"line-number"},[a._v("64")]),t("br"),t("span",{staticClass:"line-number"},[a._v("65")]),t("br"),t("span",{staticClass:"line-number"},[a._v("66")]),t("br"),t("span",{staticClass:"line-number"},[a._v("67")]),t("br"),t("span",{staticClass:"line-number"},[a._v("68")]),t("br"),t("span",{staticClass:"line-number"},[a._v("69")]),t("br"),t("span",{staticClass:"line-number"},[a._v("70")]),t("br"),t("span",{staticClass:"line-number"},[a._v("71")]),t("br"),t("span",{staticClass:"line-number"},[a._v("72")]),t("br"),t("span",{staticClass:"line-number"},[a._v("73")]),t("br"),t("span",{staticClass:"line-number"},[a._v("74")]),t("br"),t("span",{staticClass:"line-number"},[a._v("75")]),t("br"),t("span",{staticClass:"line-number"},[a._v("76")]),t("br"),t("span",{staticClass:"line-number"},[a._v("77")]),t("br")])]),t("h2",{attrs:{id:"_8-20-mathtan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-20-mathtan"}},[a._v("#")]),a._v(" 8.20 MathTan")]),a._v(" "),t("p",[a._v("返回指定角度的正切值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathTan( \n   double  rad      // 弧度参数 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nrad")]),a._v(" "),t("p",[a._v("[in] 角的弧度。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("参数 rad的正切值。如果传递的参数rad 大于或等于263，或 小于或等于 -263，则无意义，在这种情况下函数返回值不确定。")]),a._v(" "),t("p",[a._v("注意\n代替MathTan()，可以使用 tan()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-21-mathisvalidnumber"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-21-mathisvalidnumber"}},[a._v("#")]),a._v(" 8.21 MathIsValidNumber")]),a._v(" "),t("p",[a._v("检测实数的正确性。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("bool  MathIsValidNumber( \n   double  number      // 检测数 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nnumber")]),a._v(" "),t("p",[a._v("[in] 检测数值。")]),a._v(" "),t("p",[a._v("返回值\n返回TRUE，表示检测的数值是可以接受的实数。如果检测的数值是 正无穷 或者 负无穷大，或者没有数字(NaN)，函数返回FLASE。")]),a._v(" "),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('double abnormal=MathArcsin(2.0); \n   if(!MathIsValidNumber(abnormal)) Print("Attention! MathArcsin(2.0) = ",abnormal); \n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-22-mathexp1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-22-mathexp1"}},[a._v("#")]),a._v(" 8.22 MathExp1")]),a._v(" "),t("p",[a._v("返回MathExp(x) -1表达式的值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathExp1( \n   double  value      // 数值e的次方 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\n值")]),a._v(" "),t("p",[a._v("[in] 指定 自然对数 e 的次方指数值。")]),a._v(" "),t("p",[a._v("返回值\n双精度类型值。溢出的情况下，函数返回INF(无穷大∞)，如果发生下溢的情况下MathExp返回0。")]),a._v(" "),t("p",[a._v("注意\n在传递的参数值 x 接近0时，MathExp1(x)函数比MathExp(x) - 1函数生成更精确的值。")]),a._v(" "),t("p",[a._v("代替MathExp1()，可以使用expm1()函数。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-23-mathlog1p"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-23-mathlog1p"}},[a._v("#")]),a._v(" 8.23 MathLog1p")]),a._v(" "),t("p",[a._v("返回MathLog(1+x)表达式的值。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathLog1p( \n   double  value      // 对数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\n值")]),a._v(" "),t("p",[a._v("[in] 将被计算的对数值。")]),a._v(" "),t("p",[a._v("返回值\n如果成功，则返回自然对数(值+ 1)。如果传递的参数值 < -1，函数返回NaN(未定义)。如果值等于 -1，函数返回INF(无穷大∞)。")]),a._v(" "),t("p",[a._v("注意\n在传递的参数值 x 接近0时，MathLog1p(x)函数比MathLog(1+x)函数生成更精确的值。")]),a._v(" "),t("p",[a._v("代替MathLog1p()，可以使用log1p()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-24-matharccosh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-24-matharccosh"}},[a._v("#")]),a._v(" 8.24 MathArccosh")]),a._v(" "),t("p",[a._v("返回双曲反余弦。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathArccosh( \n   double  value     // 1 <= 值 < ∞ \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nvalue")]),a._v(" "),t("p",[a._v("[in] 用来计算双曲反余弦的值。")]),a._v(" "),t("p",[a._v("返回值\n数值的双曲反余弦。如果该值小于 +1，则该函数返回NaN(未定义值)。")]),a._v(" "),t("p",[a._v("注意\n代替MathArccosh()，可以使用acosh()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-25-matharcsinh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-25-matharcsinh"}},[a._v("#")]),a._v(" 8.25 MathArcsinh")]),a._v(" "),t("p",[a._v("返回双曲反正弦。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathArcsinh( \n   double  value      // -∞ < 值 < +∞ \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nvalue")]),a._v(" "),t("p",[a._v("[in] 用来计算双曲反正弦的值。")]),a._v(" "),t("p",[a._v("返回值")]),a._v(" "),t("p",[a._v("数值的双曲反正弦。")]),a._v(" "),t("p",[a._v("注意\n代替MathArcsinh()，可以使用asinh()。")]),a._v(" "),t("p",[a._v("相关参考\n真实型(双精度double，浮点float)")]),a._v(" "),t("h2",{attrs:{id:"_8-26-matharctanh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-26-matharctanh"}},[a._v("#")]),a._v(" 8.26 MathArctanh")]),a._v(" "),t("p",[a._v("返回双曲反正切。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathArctanh( \n   double  value      // 值的范围 -1<值 < 1 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数 value [in] 用来计算双曲反正切的值。取值范围 -1 < 值 < 1 。 返回值 数值的双曲反正弦。 注意 代替MathArctanh()，可以使用atanh()。")]),a._v(" "),t("h2",{attrs:{id:"_8-27-mathcosh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-27-mathcosh"}},[a._v("#")]),a._v(" 8.27 MathCosh")]),a._v(" "),t("p",[a._v("返回数值的双曲余弦。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathCosh( \n   double  value      // 数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nvalue")]),a._v(" "),t("p",[a._v("[in] 值。")]),a._v(" "),t("p",[a._v("返回值\n数值的双曲余弦，其值范围在 +1到 +∞ 之间。")]),a._v(" "),t("p",[a._v("注意\n代替MathCosh()，可以使用cosh()函数。")]),a._v(" "),t("h2",{attrs:{id:"_8-28-mathsinh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-28-mathsinh"}},[a._v("#")]),a._v(" 8.28 MathSinh")]),a._v(" "),t("p",[a._v("返回数值的双曲正弦。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathSinh( \n   double  value      // 数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nvalue")]),a._v(" "),t("p",[a._v("[in] 值。")]),a._v(" "),t("p",[a._v("返回值\n数值的双曲正弦。")]),a._v(" "),t("p",[a._v("注意\n代替MathSinh()，可以使用sinh()函数。")]),a._v(" "),t("h2",{attrs:{id:"_8-29-mathtanh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-29-mathtanh"}},[a._v("#")]),a._v(" 8.29 MathTanh")]),a._v(" "),t("p",[a._v("返回数值的双曲正切。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("double  MathTanh( \n   double  value      // 数值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\nvalue")]),a._v(" "),t("p",[a._v("[in] 值。")]),a._v(" "),t("p",[a._v("返回值\n数值的双曲正切。其值范围在 -1 到 +1之间。")]),a._v(" "),t("p",[a._v("注意\n代替MathTanh()，可以使用tanh()函数。")]),a._v(" "),t("h2",{attrs:{id:"_8-30-mathswap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-30-mathswap"}},[a._v("#")]),a._v(" 8.30 MathSwap")]),a._v(" "),t("p",[a._v("在ushort类型值中改变字节的顺序")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ushort  MathSwap( \n   ushort  value      //值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\n值")]),a._v(" "),t("p",[a._v("[in] 用于改变字节顺序的值。")]),a._v(" "),t("p",[a._v("返回值\n具有相反字节顺序的ushort值。")]),a._v(" "),t("p",[a._v("MathSwap")]),a._v(" "),t("p",[a._v("在uint类型值中改变字节的顺序。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("uint  MathSwap( \n   uint   value      // 值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\n值")]),a._v(" "),t("p",[a._v("[in] 用于改变字节顺序的值。")]),a._v(" "),t("p",[a._v("返回值\n具有相反字节顺序的uint值。")]),a._v(" "),t("p",[a._v("MathSwap")]),a._v(" "),t("p",[a._v("在ulong类型值中改变字节的顺序。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ulong  MathSwap( \n   ulong  value      //值 \n   );\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("参数\n值")]),a._v(" "),t("p",[a._v("[in] 用于改变字节顺序的值。")]),a._v(" "),t("p",[a._v("返回值\n具有相反字节顺序的ulong值。")])])}),[],!1,null,null,null);s.default=e.exports}}]);