(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{664:function(t,s,n){"use strict";n.r(s);var a=n(62),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",[t._v("第二十九章 使用OpenCL工作")]),t._v(" "),n("p",[t._v("OpenCL 程序用来执行支持OpenCL 1.1或更高版本的视频卡上的计算。 现代视频卡包含数百个小型专用处理器，可以同时与输入数据流进行简单的数学运算。 OpenCL语言组织了并行计算并且为一类特定任务提供了更快的速度。")]),t._v(" "),n("p",[t._v("在一些图形卡中默认禁止处理 双精度(double)类型数字。这可能会导致编译错误5105。若要启用支持 双精度(double)类型数字，请添加以下指令到您的OpenCL程序：")]),t._v(" "),n("p",[n("code",[t._v("#pragma OPENCL EXTENSION cl_khr_fp64 : enable")])]),t._v(" "),n("p",[t._v("更多详情请参考以下链接")]),t._v(" "),n("p",[n("code",[t._v("https://www.khronos.org/registry/OpenCL/sdk/1.0/docs/man/xhtml/cl_khr_fp64.html")])]),t._v(" "),n("p",[t._v("但是，如果图形卡不支持 双精度(double)型，启用该指令则不会有帮助。")]),t._v(" "),n("p",[t._v("建议以单独的CL文件编写OpenCL源代码，稍后将其包含进使用资源变量MQL5程序。")]),t._v(" "),n("p",[t._v("运行OpenCL程序中的函数:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("函数")]),t._v(" "),n("th",[t._v("功能")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("CLHandleType")]),t._v(" "),n("td",[t._v("返回OpenCL句柄的类型，作为ENUM_OPENCL_HANDLE_TYPE枚举值")])]),t._v(" "),n("tr",[n("td",[t._v("CLGetInfoInteger")]),t._v(" "),n("td",[t._v("为OpenCL对象 或 设备返回一个整数属性值")])]),t._v(" "),n("tr",[n("td",[t._v("CLContextCreate")]),t._v(" "),n("td",[t._v("创建OpenCL上下文(容器)")])]),t._v(" "),n("tr",[n("td",[t._v("CLContextFree")]),t._v(" "),n("td",[t._v("移除OpenCL上下文(容器)")])]),t._v(" "),n("tr",[n("td",[t._v("CLGetDeviceInfo")]),t._v(" "),n("td",[t._v("从OpenCL驱动程序接收设备属性")])]),t._v(" "),n("tr",[n("td",[t._v("CLProgramCreate")]),t._v(" "),n("td",[t._v("从源代码创建OpenCL程序")])]),t._v(" "),n("tr",[n("td",[t._v("CLProgramFree")]),t._v(" "),n("td",[t._v("移除OpenCL程序")])]),t._v(" "),n("tr",[n("td",[t._v("CLKernelCreate")]),t._v(" "),n("td",[t._v("创建OpenCL开始函数")])]),t._v(" "),n("tr",[n("td",[t._v("CLKernelFree")]),t._v(" "),n("td",[t._v("移除OpenCL开始函数")])]),t._v(" "),n("tr",[n("td",[t._v("CLSetKernelArg")]),t._v(" "),n("td",[t._v("为OpenCL函数设置一个参数")])]),t._v(" "),n("tr",[n("td",[t._v("CLSetKernelArgMem")]),t._v(" "),n("td",[t._v("设置OpenCL缓冲作为OpenCL函数的参数")])]),t._v(" "),n("tr",[n("td",[t._v("CLSetKernelArgMemLocal")]),t._v(" "),n("td",[t._v("设置本地缓冲区作为内核函数参数")])]),t._v(" "),n("tr",[n("td",[t._v("CLBufferCreate")]),t._v(" "),n("td",[t._v("创建OpenCL缓冲")])]),t._v(" "),n("tr",[n("td",[t._v("CLBufferFree")]),t._v(" "),n("td",[t._v("删除OpenCL缓冲")])]),t._v(" "),n("tr",[n("td",[t._v("CLBufferWrite")]),t._v(" "),n("td",[t._v("写入数组到OpenCL缓冲")])]),t._v(" "),n("tr",[n("td",[t._v("CLBufferRead")]),t._v(" "),n("td",[t._v("读取OpenCL缓冲到数组")])]),t._v(" "),n("tr",[n("td",[t._v("CLExecute")]),t._v(" "),n("td",[t._v("运行OpenCL程序")])]),t._v(" "),n("tr",[n("td",[t._v("CLExecutionStatus")]),t._v(" "),n("td",[t._v("返回OpenCL程序执行状态。")])])])]),t._v(" "),n("p",[t._v("相关参考")]),t._v(" "),n("p",[t._v("OpenCL, 资源")]),t._v(" "),n("h2",{attrs:{id:"_29-1-clhandletype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-1-clhandletype"}},[t._v("#")]),t._v(" 29.1 CLHandleType")]),t._v(" "),n("p",[t._v("返回OpenCL句柄的类型，作为ENUM_OPENCL_HANDLE_TYPE枚举的值。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("ENUM_OPENCL_HANDLE_TYPE  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLHandleType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  handle     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL对象处理 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("handle")]),t._v(" "),n("p",[t._v("[in] OpenCL对象的句柄：上下文，内核或OpenCL程序。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("OpenCL句柄的类型，作为ENUM_OPENCL_HANDLE_TYPE枚举的值。")]),t._v(" "),n("p",[n("strong",[t._v("ENUM_OPENCL_HANDLE_TYPE")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("标识符")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("OPENCL_INVALID")]),t._v(" "),n("td",[t._v("不正确处理")])]),t._v(" "),n("tr",[n("td",[t._v("OPENCL_CONTEXT")]),t._v(" "),n("td",[t._v("OpenCL上下文的句柄")])]),t._v(" "),n("tr",[n("td",[t._v("OPENCL_PROGRAM")]),t._v(" "),n("td",[t._v("OpenCL程序的句柄")])]),t._v(" "),n("tr",[n("td",[t._v("OPENCL_KERNEL")]),t._v(" "),n("td",[t._v("OpenCL内核的句柄")])]),t._v(" "),n("tr",[n("td",[t._v("OPENCL_BUFFER")]),t._v(" "),n("td",[t._v("OpenCL缓冲的句柄")])])])]),t._v(" "),n("h2",{attrs:{id:"_29-2-clgetinfointeger"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-2-clgetinfointeger"}},[t._v("#")]),t._v(" 29.2 CLGetInfoInteger")]),t._v(" "),n("p",[t._v("返回OpenCL对象 或 设备的整数属性的值。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL对象处理或OpenCL设备编号 ")]),t._v("\n   ENUM_OPENCL_PROPERTY_INTEGER  prop     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被请求属性 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("handle")]),t._v(" "),n("p",[t._v("[in] OpenCL对象的句柄或OpenCL设备的编号。 OpenCL设备的编号从零开始。")]),t._v(" "),n("p",[t._v("prop")]),t._v(" "),n("p",[t._v("[in] 从ENUM_OPENCL_PROPERTY_INTEGER枚举中请求的属性的类型，您要获取的值。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功则返回 属性的值，或 一旦错误则返回 -1。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[n("strong",[t._v("ENUM_OPENCL_PROPERTY_INTEGER")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("标识符")]),t._v(" "),n("th",[t._v("描述")]),t._v(" "),n("th",[t._v("类型")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("CL_DEVICE_COUNT")]),t._v(" "),n("td",[t._v("OpenCL支持的设备编号. 此属性不要求第一个参数规范，即你可以处理参数通过一个为零的值")]),t._v(" "),n("td",[t._v("int")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_TYPE")]),t._v(" "),n("td",[t._v("设备类型")]),t._v(" "),n("td",[t._v("ENUM_CL_DEVICE_TYPE")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_VENDOR_ID")]),t._v(" "),n("td",[t._v("唯一的供应商识别")]),t._v(" "),n("td",[t._v("uint")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_MAX_COMPUTE_UNITS")]),t._v(" "),n("td",[t._v("OpenCL设备中的并行计算任务编号. 一个工作组解决了一个计算任务.最低值为1")]),t._v(" "),n("td",[t._v("uint")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_MAX_CLOCK_FREQUENCY")]),t._v(" "),n("td",[t._v("设备最高的固定频率兆赫.")]),t._v(" "),n("td",[t._v("uint")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_GLOBAL_MEM_SIZE")]),t._v(" "),n("td",[t._v("设备的全局内存字节大小")]),t._v(" "),n("td",[t._v("ulong")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_LOCAL_MEM_SIZE")]),t._v(" "),n("td",[t._v("处理数据（事件）本地内存的字节大小")]),t._v(" "),n("td",[t._v("uint")])]),t._v(" "),n("tr",[n("td",[t._v("CL_BUFFER_SIZE")]),t._v(" "),n("td",[t._v("OpenCL字节缓冲区的实际大小")]),t._v(" "),n("td",[t._v("ulong")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_MAX_WORK_GROUP_SIZE")]),t._v(" "),n("td",[t._v("可用于OpenCL设备的本地工作组总数。")]),t._v(" "),n("td",[t._v("ulong")])]),t._v(" "),n("tr",[n("td",[t._v("CL_KERNEL_WORK_GROUP_SIZE")]),t._v(" "),n("td",[t._v("可用于OpenCL程序的本地工作组总数。")]),t._v(" "),n("td",[t._v("ulong")])]),t._v(" "),n("tr",[n("td",[t._v("CL_KERNEL_LOCAL_MEM_SIZE")]),t._v(" "),n("td",[t._v("由OpenCL程序用于解决一组全部并行任务的本地存储器大小（字节）。 使用CL_DEVICE_LOCAL_MEM_SIZE 接收最大可用值")]),t._v(" "),n("td",[t._v("ulong")])]),t._v(" "),n("tr",[n("td",[t._v("CL_KERNEL_PRIVATE_MEM_SIZE")]),t._v(" "),n("td",[t._v("OpenCL程序内核中，每个任务使用的最小专有存储器大小（字节）。")]),t._v(" "),n("td",[t._v("ulong")])])])]),t._v(" "),n("p",[t._v("ENUM_CL_DEVICE_TYPE枚举包含了可能支持OpenCL的设备类型。您可以通过调用CLGetInfoInteger（handle_or_deviceN，CL_DEVICE_TYPE），通过其编号或OpenCL对象的句柄来接收设备类型。")]),t._v(" "),n("p",[n("strong",[t._v("ENUM_CL_DEVICE_TYPE")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("标识符")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("CL_DEVICE_ACCELERATOR")]),t._v(" "),n("td",[t._v("OpenCL专用加速器 (比如, IBM CELL Blade). 这些设备使用外设互连如PCIe与主处理器进行通信.")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_CPU")]),t._v(" "),n("td",[t._v("一个OpenCL主机处理器设备. 主机处理器运行OpenCL运转且为一个单核或多核CPU.")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_GPU")]),t._v(" "),n("td",[t._v("一个OpenCL设备是GPU.")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_DEFAULT")]),t._v(" "),n("td",[t._v("系统默认的OpenCL设备. 默认设备不能为")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_CUSTOM")]),t._v(" "),n("td",[t._v("专用的加速器不支持OpenCL C编写的程序.")])])])]),t._v(" "),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 初始化 OpenCL 上下文 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CL_USE_GPU_ONLY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("INVALID_HANDLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL not found"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 显示有关OpenCL设备的常规信息 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL type: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("EnumToString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENUM_CL_DEVICE_TYPE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_TYPE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL vendor ID: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_VENDOR_ID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL units: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_MAX_COMPUTE_UNITS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL freq: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_MAX_CLOCK_FREQUENCY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" MHz"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL global mem: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_GLOBAL_MEM_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" bytes"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL local mem: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_LOCAL_MEM_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" bytes"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---  ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br")])]),n("h2",{attrs:{id:"_29-3-clgetinfostring"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-3-clgetinfostring"}},[t._v("#")]),t._v(" 29.3 CLGetInfoString")]),t._v(" "),n("p",[t._v("返回OpenCL对象 或 设备的属性的字符串值。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL对象处理或者OpenCL设备号码 ")]),t._v("\n   ENUM_OPENCL_PROPERTY_STRING  prop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被请求的属性 ")]),t._v("\n   string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("  value                         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用字符串 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("handle")]),t._v(" "),n("p",[t._v("[in] OpenCL对象句柄或OpenCL设备号。 OpenCL设备的编号从零开始。 prop")]),t._v(" "),n("p",[t._v("[in] 从 ENUM_OPENCL_PROPERTY_STRING 枚举中请求的属性的类型，您要获取的值")]),t._v(" "),n("p",[t._v("value")]),t._v(" "),n("p",[t._v("[out] 接收属性值的字符串.")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("成功则返回true, 否则返回 false. 想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[n("strong",[t._v("ENUM_OPENCL_PROPERTY_STRING")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("标识符")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("CL_PLATFORM_PROFILE")]),t._v(" "),n("td",[t._v("OpenCL简介.  简介名称可以是以下值中的某一个:"),n("br"),t._v("FULL_PROFILE - 实现支持OpenCL（功能定义为核心规范的一部分而无需为OpenCL支持额外的扩展） ;"),n("br"),t._v("EMBEDDED_PROFILE - 实现支持OpenCL作为增补. 修订简介被定义为每个OpenCL版本的子集.")])]),t._v(" "),n("tr",[n("td",[t._v("CL_PLATFORM_VERSION")]),t._v(" "),n("td",[t._v("OpenCL版本")])]),t._v(" "),n("tr",[n("td",[t._v("CL_PLATFORM_VENDOR")]),t._v(" "),n("td",[t._v("平台供应商名称")])]),t._v(" "),n("tr",[n("td",[t._v("CL_PLATFORM_EXTENSIONS")]),t._v(" "),n("td",[t._v("由平台支持的扩展名列表。扩展名应该能被所有与这个平台相")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_NAME")]),t._v(" "),n("td",[t._v("设备名称")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_VENDOR")]),t._v(" "),n("td",[t._v("供应商名称")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DRIVER_VERSION")]),t._v(" "),n("td",[t._v("major_number.minor_number格式OpenCL设备版本")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_PROFILE")]),t._v(" "),n("td",[t._v("OpenCL设备简介. 简介名称可以是以下值的某一个:"),n("br"),t._v("FULL_PROFILE -  实现支持OpenCL（功能定义为核心规范的一部分而无需为OpenCL支持额外的扩展）;"),n("br"),t._v("EMBEDDED_PROFILE -实现支持OpenCL作为增补. 修订简介被定义为每个OpenCL版本的子集.")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_VERSION")]),t._v(" "),n("td",[n("code",[t._v("OpenCL<space><major_version.minor_version><space><vendor-specific information>")]),t._v("格式OpenCL版本")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_EXTENSIONS")]),t._v(" "),n("td",[t._v("设备所支持的扩展名列表。列表可以包含由供应商支持的扩展，以及一个或多个批准名称:"),n("br"),t._v("   cl_khr_int64_base_atomics"),n("br"),t._v("   cl_khr_int64_extended_atomics"),n("br"),t._v("   cl_khr_fp16"),n("br"),t._v("   cl_khr_gl_sharing"),n("br"),t._v("   cl_khr_gl_event"),n("br"),t._v("   cl_khr_d3d10_sharing"),n("br"),t._v("   cl_khr_dx9_media_sharing"),n("br"),t._v("   cl_khr_d3d11_sharing"),n("br")])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_BUILT_IN_KERNELS")]),t._v(" "),n("td",[t._v('可支持的内核列表用 ";"分割.')])]),t._v(" "),n("tr",[n("td",[t._v("CL_DEVICE_OPENCL_C_VERSION")]),t._v(" "),n("td",[t._v("这个设备的编译器所支持的最大版本。版本格式:"),n("br"),n("code",[t._v("OpenCL<space>C<space><major_version.minor_version><space><vendor-specific information>")])])])])]),t._v(" "),n("p",[t._v("例如：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   string str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 初始化 OpenCL 上下文 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CL_USE_GPU_ONLY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("INVALID_HANDLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL not found"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 显示平台信息 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_PLATFORM_NAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL platform name: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_PLATFORM_VENDOR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL platform vendor: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_PLATFORM_VERSION"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL platform ver: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_PLATFORM_PROFILE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL platform profile: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_PLATFORM_EXTENSIONS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL platform ext: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 显示设备信息 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_NAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL device name: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_PROFILE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL device profile: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_BUILT_IN_KERNELS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL device kernels: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_EXTENSIONS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL device ext: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_VENDOR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL device vendor: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_VERSION"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL device ver: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_OPENCL_C_VERSION"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL open c ver: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 显示OpenCL设备的常规信息 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL type: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("EnumToString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENUM_CL_DEVICE_TYPE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_TYPE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL vendor ID: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_VENDOR_ID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL units: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_MAX_COMPUTE_UNITS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL freq: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_MAX_CLOCK_FREQUENCY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL global mem: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_GLOBAL_MEM_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL local mem: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_LOCAL_MEM_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---  ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br")])]),n("h2",{attrs:{id:"_29-4-clcontextcreate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-4-clcontextcreate"}},[t._v("#")]),t._v(" 29.4 CLContextCreate")]),t._v(" "),n("p",[t._v("创建一个OpenCL上下文并返回其句柄。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  device     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL设备或宏的序列号 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("device")]),t._v(" "),n("p",[t._v("[in] 系统中的OpenCL设备序号. 你可以指定下列值之一，而不是一个具体的数字:")]),t._v(" "),n("p",[t._v("• CL_USE_ANY —— 任何支持OpenCL的有效设备均被允许; "),n("br"),t._v("\n• CL_USE_CPU_ONLY —— 仅CPU中的OpenCL仿真被允许;"),n("br"),t._v("\n• CL_USE_GPU_ONLY —— OpenCL仿真被禁止并且仅有OpenCL支持的专业设备 (视频卡) 可以被使用.")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功创建OpenCL上下文对象将返回句柄。一旦出错 则返回 -1 . 想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("h2",{attrs:{id:"_29-5-clcontextfree"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-5-clcontextfree"}},[t._v("#")]),t._v(" 29.5 CLContextFree")]),t._v(" "),n("p",[t._v("删除一个OpenCL上下文并返回其句柄。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  context     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL上下文的句柄 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("context")]),t._v(" "),n("p",[t._v("[in] OpenCL 上下文的句柄。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("无。 在内部错误情况下 _LastError 的值会改变。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("h2",{attrs:{id:"_29-6-clgetdeviceinfo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-6-clgetdeviceinfo"}},[t._v("#")]),t._v(" 29.6 CLGetDeviceInfo")]),t._v(" "),n("p",[t._v("此函数从OpenCL驱动中接收设备的属性信息。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetDeviceInfo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("     handle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL设备处理 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("     property_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被请求的属性 ID  ")]),t._v("\n   uchar"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("  data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据接收数组 ")]),t._v("\n   uint"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("   size             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组中的元素转换，默认为0 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("handle")]),t._v(" "),n("p",[t._v("[in] 由CLContextCreate()函数创建的OpenCL设备索引 或 OpenCL句柄。")]),t._v(" "),n("p",[t._v("property_id")]),t._v(" "),n("p",[t._v("[in] 应接收的OpenCL设备属性的ID。这些值可能是下表中列出的枚举值之一。")]),t._v(" "),n("p",[t._v("data[]")]),t._v(" "),n("p",[t._v("[out] 用于接收所请求属性的数据的数组。")]),t._v(" "),n("p",[t._v("size")]),t._v(" "),n("p",[t._v("[out] 接收数据的数组 data[] 的大小.")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功则为true ，否则为 false. 想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("对于一维数组，考虑AS_SERIES标帜计算从中读取OpenCL缓冲区的数据的元素的数量。")]),t._v(" "),n("p",[t._v("OpenCL设备属性的可用ID列表")]),t._v(" "),n("p",[t._v("可以在OpenCL官方网站(https://www.khronos.org/opencl/)上找到该属性及其功能的确切描述。")]),t._v(" "),n("table",{attrs:{border:"1"}},[n("tbody",[n("tr",{attrs:{bgcolor:"#add8e6"}},[n("td",[n("p",[t._v("标识符 ")])]),t._v(" "),n("td",[n("p",[t._v("值 ")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_TYPE")])]),t._v(" "),n("td",[n("p",[t._v("0x1000")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_VENDOR_ID")])]),t._v(" "),n("td",[n("p",[t._v("0x1001")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_COMPUTE_UNITS")])]),t._v(" "),n("td",[n("p",[t._v("0x1002")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS")])]),t._v(" "),n("td",[n("p",[t._v("0x1003")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_WORK_GROUP_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1004")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_WORK_ITEM_SIZES")])]),t._v(" "),n("td",[n("p",[t._v("0x1005")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR")])]),t._v(" "),n("td",[n("p",[t._v("0x1006")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT")])]),t._v(" "),n("td",[n("p",[t._v("0x1007")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT")])]),t._v(" "),n("td",[n("p",[t._v("0x1008")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG")])]),t._v(" "),n("td",[n("p",[t._v("0x1009")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT")])]),t._v(" "),n("td",[n("p",[t._v("0x100A")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE")])]),t._v(" "),n("td",[n("p",[t._v("0x100B")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_CLOCK_FREQUENCY")])]),t._v(" "),n("td",[n("p",[t._v("0x100C")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_ADDRESS_BITS")])]),t._v(" "),n("td",[n("p",[t._v("0x100D")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_READ_IMAGE_ARGS")])]),t._v(" "),n("td",[n("p",[t._v("0x100E")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_WRITE_IMAGE_ARGS")])]),t._v(" "),n("td",[n("p",[t._v("0x100F")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_MEM_ALLOC_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1010")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE2D_MAX_WIDTH")])]),t._v(" "),n("td",[n("p",[t._v("0x1011")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE2D_MAX_HEIGHT")])]),t._v(" "),n("td",[n("p",[t._v("0x1012")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE3D_MAX_WIDTH")])]),t._v(" "),n("td",[n("p",[t._v("0x1013")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE3D_MAX_HEIGHT")])]),t._v(" "),n("td",[n("p",[t._v("0x1014")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE3D_MAX_DEPTH")])]),t._v(" "),n("td",[n("p",[t._v("0x1015")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE_SUPPORT")])]),t._v(" "),n("td",[n("p",[t._v("0x1016")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_PARAMETER_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1017")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_SAMPLERS")])]),t._v(" "),n("td",[n("p",[t._v("0x1018")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MEM_BASE_ADDR_ALIGN")])]),t._v(" "),n("td",[n("p",[t._v("0x1019")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x101A")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_SINGLE_FP_CONFIG")])]),t._v(" "),n("td",[n("p",[t._v("0x101B")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_GLOBAL_MEM_CACHE_TYPE")])]),t._v(" "),n("td",[n("p",[t._v("0x101C")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x101D")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_GLOBAL_MEM_CACHE_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x101E")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_GLOBAL_MEM_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x101F")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1020")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_MAX_CONSTANT_ARGS")])]),t._v(" "),n("td",[n("p",[t._v("0x1021")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_LOCAL_MEM_TYPE")])]),t._v(" "),n("td",[n("p",[t._v("0x1022")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_LOCAL_MEM_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1023")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_ERROR_CORRECTION_SUPPORT")])]),t._v(" "),n("td",[n("p",[t._v("0x1024")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PROFILING_TIMER_RESOLUTION")])]),t._v(" "),n("td",[n("p",[t._v("0x1025")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_ENDIAN_LITTLE")])]),t._v(" "),n("td",[n("p",[t._v("0x1026")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_AVAILABLE")])]),t._v(" "),n("td",[n("p",[t._v("0x1027")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_COMPILER_AVAILABLE")])]),t._v(" "),n("td",[n("p",[t._v("0x1028")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_EXECUTION_CAPABILITIES")])]),t._v(" "),n("td",[n("p",[t._v("0x1029")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_QUEUE_PROPERTIES")])]),t._v(" "),n("td",[n("p",[t._v("0x102A")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NAME")])]),t._v(" "),n("td",[n("p",[t._v("0x102B")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_VENDOR")])]),t._v(" "),n("td",[n("p",[t._v("0x102C")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DRIVER_VERSION")])]),t._v(" "),n("td",[n("p",[t._v("0x102D")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PROFILE")])]),t._v(" "),n("td",[n("p",[t._v("0x102E")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_VERSION")])]),t._v(" "),n("td",[n("p",[t._v("0x102F")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_EXTENSIONS")])]),t._v(" "),n("td",[n("p",[t._v("0x1030")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PLATFORM")])]),t._v(" "),n("td",[n("p",[t._v("0x1031")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_DOUBLE_FP_CONFIG")])]),t._v(" "),n("td",[n("p",[t._v("0x1032")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF")])]),t._v(" "),n("td",[n("p",[t._v("0x1034")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_HOST_UNIFIED_MEMORY")])]),t._v(" "),n("td",[n("p",[t._v("0x1035")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_CHAR")])]),t._v(" "),n("td",[n("p",[t._v("0x1036")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_SHORT")])]),t._v(" "),n("td",[n("p",[t._v("0x1037")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_INT")])]),t._v(" "),n("td",[n("p",[t._v("0x1038")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_LONG")])]),t._v(" "),n("td",[n("p",[t._v("0x1039")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_FLOAT")])]),t._v(" "),n("td",[n("p",[t._v("0x103A")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE")])]),t._v(" "),n("td",[n("p",[t._v("0x103B")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_NATIVE_VECTOR_WIDTH_HALF")])]),t._v(" "),n("td",[n("p",[t._v("0x103C")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_OPENCL_C_VERSION")])]),t._v(" "),n("td",[n("p",[t._v("0x103D")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_LINKER_AVAILABLE")])]),t._v(" "),n("td",[n("p",[t._v("0x103E")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_BUILT_IN_KERNELS")])]),t._v(" "),n("td",[n("p",[t._v("0x103F")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE_MAX_BUFFER_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1040")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE_MAX_ARRAY_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1041")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PARENT_DEVICE")])]),t._v(" "),n("td",[n("p",[t._v("0x1042")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PARTITION_MAX_SUB_DEVICES")])]),t._v(" "),n("td",[n("p",[t._v("0x1043")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PARTITION_PROPERTIES")])]),t._v(" "),n("td",[n("p",[t._v("0x1044")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PARTITION_AFFINITY_DOMAIN")])]),t._v(" "),n("td",[n("p",[t._v("0x1045")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PARTITION_TYPE")])]),t._v(" "),n("td",[n("p",[t._v("0x1046")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_REFERENCE_COUNT")])]),t._v(" "),n("td",[n("p",[t._v("0x1047")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PREFERRED_INTEROP_USER_SYNC")])]),t._v(" "),n("td",[n("p",[t._v("0x1048")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_PRINTF_BUFFER_SIZE")])]),t._v(" "),n("td",[n("p",[t._v("0x1049")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE_PITCH_ALIGNMENT")])]),t._v(" "),n("td",[n("p",[t._v("0x104A")])])]),t._v(" "),n("tr",[n("td",[n("p",[t._v("CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT")])]),t._v(" "),n("td",[n("p",[t._v("0x104B")])])])])]),t._v("\n示例：\n"),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---  ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" dCount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" clCtx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clCtx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n         "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ERROR in CLContextCreate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      string device"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetInfoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clCtx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_NAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("device"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("device"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      uchar data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      uint size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLGetDeviceInfo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clCtx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_DEVICE_VENDOR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size = "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      string str"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CharArrayToString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- example of entries in Experts journal ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      2: Advanced Micro Devices, Inc. ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      size = 32 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      Tahiti ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      Intel(R) Corporation ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      size = 21 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      1:        Intel(R) Core(TM) i7-3770 CPU @ 3.40GHz ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      NVIDIA Corporation ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      size = 19 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  2013.07.24 10:50:48     opencl (EURUSD,H1)      0: GeForce GTX 580")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br")])]),n("h2",{attrs:{id:"_29-7-clprogramcreate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-7-clprogramcreate"}},[t._v("#")]),t._v(" 29.7 CLProgramCreate")]),t._v(" "),n("p",[t._v("从源代码创建一个OpenCL程序.")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("           context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL上下文的句柄 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string  source       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 源代码 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("重载函数版本创建OpenCL程序并将编译器消息写入传递的字符串。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("           context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle to an OpenCL context ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string  source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Source code ")]),t._v("\n   string       "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("build_log    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A string for receiving the compilation log ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("context")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL上下文的句柄。")]),t._v(" "),n("p",[t._v("source")]),t._v(" "),n("p",[t._v("[in] OpenCL程序源代码字符串。")]),t._v(" "),n("p",[t._v("&build_log")]),t._v(" "),n("p",[t._v("[in] 用于接收OpenCL编译器消息的字符串。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功，则为OpenCL对象的句柄。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("目前，以下错误代码正在使用:"),n("br"),t._v("\n• ERR_OPENCL_INVALID_HANDLE —— OpenCL上下文的句柄无效。"),n("br"),t._v("\n• ERR_INVALID_PARAMETER —— 无效的字符串参数。"),n("br"),t._v("\n• ERR_NOT_ENOUGH_MEMORY —— 内存不足无法完成操作。"),n("br"),t._v("\n• ERR_OPENCL_PROGRAM_CREATE —— OpenCL 内部错误或编译错误。"),n("br")]),t._v(" "),n("p",[t._v("在一些图形卡中默认禁止处理 双精度(double)类型数字。这可能会导致编译错误5105。若要启用支持 双精度(double)类型数字，请添加以下指令到您的OpenCL程序：")]),t._v(" "),n("p",[n("code",[t._v("#pragma OPENCL EXTENSION cl_khr_fp64 : enable")]),t._v("\n更多详情请参考以下链接 https://www.khronos.org/registry/OpenCL/sdk/1.0/docs/man/xhtml/cl_khr_fp64.html")]),t._v(" "),n("p",[t._v("但是，如果图形卡不支持 双精度(double)型，启用该指令则不会有帮助。")]),t._v(" "),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+------------------------------------------------------------------+ ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//| OpenCL kernel                                                    | ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+------------------------------------------------------------------+ ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string \ncl_src"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 默认一些 GPU 不支持双精度类型 ")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- cl_khr_fp64 指令用于启用处理双精度类型 ")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#pragma OPENCL EXTENSION cl_khr_fp64 : enable      \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- OpenCL 核函数 ")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__kernel void Test_GPU(__global double *data,      \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"                       const    int N,             \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"                       const    int total_arrays)  \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  {                                                \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"   uint kernel_index=get_global_id(0);             \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"   if (kernel_index>total_arrays) return;          \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"   uint local_start_offset=kernel_index*N;         \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"   for(int i=0; i<N; i++)                          \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"     {                                             \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"       data[i+local_start_offset] *= 2.0;          \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"     }                                             \\r\\n"')]),t._v(" \n       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  }                                                \\r\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+------------------------------------------------------------------+ ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//| Test_CPU                                                         | ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+------------------------------------------------------------------+ ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test_CPU")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" N"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" total_arrays"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 检查数组大小 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArraySize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 检查数组索引 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("total_arrays"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 通过索引id计算数组局部偏移 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" local_start_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("N"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 元素乘以2 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("N"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("local_start_offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("ARRAY_SIZE")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("  ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// size of the array ")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("TOTAL_ARRAYS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("    ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total arrays ")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- OpenCL 处理程序 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL 内容处理 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cl_prg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL 程序处理 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL 核处理 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cl_mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL 缓冲处理 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" DataArray1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于CPU计算的数据数组 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" DataArray2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于GPU计算的数据数组 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+------------------------------------------------------------------+ ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//| 脚本程序起始函数                                   | ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+------------------------------------------------------------------+ ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 初始化OpenCL对象 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 创建OpenCL 环境 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("INVALID_HANDLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL not found. Error="')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLastError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 创建 OpenCL 程序 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_prg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cl_src"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("INVALID_HANDLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL program create failed. Error="')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLastError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 创建OpenCL 内核 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLKernelCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_prg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test_GPU"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("INVALID_HANDLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_prg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL kernel create failed. Error="')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLastError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 创建 OpenCL 缓冲 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_mem"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CL_MEM_READ_WRITE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("INVALID_HANDLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLKernelFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_prg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OpenCL buffer create failed. Error="')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetLastError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 设置OpenCL 内核常量参数 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLSetKernelArgMem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cl_mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLSetKernelArg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLSetKernelArg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 准备数据数组 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArrayResize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DataArray1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArrayResize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DataArray2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 用数据填写数组 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 计算 jth 数组局部开始偏移 ")]),t._v("\n      uint local_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 准备 j 索引数组 ")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 用MathCos(i+j)函数填写数组; ")]),t._v("\n         DataArray1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("local_offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MathCos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n         DataArray2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("local_offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MathCos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 测试CPU 计算 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 计算 j 索引数组  ")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test_CPU")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DataArray1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 准备 CLExecute 参数 ")]),t._v("\n   uint  offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 全局工作大小 ")]),t._v("\n   uint  work"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 编写数据到 OpenCL 缓冲 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("DataArray2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 执行OpenCL 内核 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLExecute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("work"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 从OpenCL缓冲阅读数据 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferRead")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("DataArray2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 总误差 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" total_error"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 比较结果和计算误差 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 计算 jth 数组局部偏移 ")]),t._v("\n      uint local_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 比较结果 ")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ARRAY_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" v1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DataArray1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("local_offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" v2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DataArray2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("local_offset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" delta"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MathAbs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n         total_error"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 显示初始和最后的数组 ")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("PrintFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"array %d of %d, element [%d]:  %f, %f, [error]=%f"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("TOTAL_ARRAYS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("PrintFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Total error: %f"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("total_error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 删除OpenCL 对象 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 释放 OpenCL 缓冲 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_mem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 释放 OpenCL 内核 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLKernelFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_krn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 释放 OpenCL 程序 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_prg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- 释放 OpenCL 环境 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLContextFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl_ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--- ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br"),n("span",{staticClass:"line-number"},[t._v("84")]),n("br"),n("span",{staticClass:"line-number"},[t._v("85")]),n("br"),n("span",{staticClass:"line-number"},[t._v("86")]),n("br"),n("span",{staticClass:"line-number"},[t._v("87")]),n("br"),n("span",{staticClass:"line-number"},[t._v("88")]),n("br"),n("span",{staticClass:"line-number"},[t._v("89")]),n("br"),n("span",{staticClass:"line-number"},[t._v("90")]),n("br"),n("span",{staticClass:"line-number"},[t._v("91")]),n("br"),n("span",{staticClass:"line-number"},[t._v("92")]),n("br"),n("span",{staticClass:"line-number"},[t._v("93")]),n("br"),n("span",{staticClass:"line-number"},[t._v("94")]),n("br"),n("span",{staticClass:"line-number"},[t._v("95")]),n("br"),n("span",{staticClass:"line-number"},[t._v("96")]),n("br"),n("span",{staticClass:"line-number"},[t._v("97")]),n("br"),n("span",{staticClass:"line-number"},[t._v("98")]),n("br"),n("span",{staticClass:"line-number"},[t._v("99")]),n("br"),n("span",{staticClass:"line-number"},[t._v("100")]),n("br"),n("span",{staticClass:"line-number"},[t._v("101")]),n("br"),n("span",{staticClass:"line-number"},[t._v("102")]),n("br"),n("span",{staticClass:"line-number"},[t._v("103")]),n("br"),n("span",{staticClass:"line-number"},[t._v("104")]),n("br"),n("span",{staticClass:"line-number"},[t._v("105")]),n("br"),n("span",{staticClass:"line-number"},[t._v("106")]),n("br"),n("span",{staticClass:"line-number"},[t._v("107")]),n("br"),n("span",{staticClass:"line-number"},[t._v("108")]),n("br"),n("span",{staticClass:"line-number"},[t._v("109")]),n("br"),n("span",{staticClass:"line-number"},[t._v("110")]),n("br"),n("span",{staticClass:"line-number"},[t._v("111")]),n("br"),n("span",{staticClass:"line-number"},[t._v("112")]),n("br"),n("span",{staticClass:"line-number"},[t._v("113")]),n("br"),n("span",{staticClass:"line-number"},[t._v("114")]),n("br"),n("span",{staticClass:"line-number"},[t._v("115")]),n("br"),n("span",{staticClass:"line-number"},[t._v("116")]),n("br"),n("span",{staticClass:"line-number"},[t._v("117")]),n("br"),n("span",{staticClass:"line-number"},[t._v("118")]),n("br"),n("span",{staticClass:"line-number"},[t._v("119")]),n("br"),n("span",{staticClass:"line-number"},[t._v("120")]),n("br"),n("span",{staticClass:"line-number"},[t._v("121")]),n("br"),n("span",{staticClass:"line-number"},[t._v("122")]),n("br"),n("span",{staticClass:"line-number"},[t._v("123")]),n("br"),n("span",{staticClass:"line-number"},[t._v("124")]),n("br"),n("span",{staticClass:"line-number"},[t._v("125")]),n("br"),n("span",{staticClass:"line-number"},[t._v("126")]),n("br"),n("span",{staticClass:"line-number"},[t._v("127")]),n("br"),n("span",{staticClass:"line-number"},[t._v("128")]),n("br"),n("span",{staticClass:"line-number"},[t._v("129")]),n("br"),n("span",{staticClass:"line-number"},[t._v("130")]),n("br"),n("span",{staticClass:"line-number"},[t._v("131")]),n("br"),n("span",{staticClass:"line-number"},[t._v("132")]),n("br"),n("span",{staticClass:"line-number"},[t._v("133")]),n("br"),n("span",{staticClass:"line-number"},[t._v("134")]),n("br"),n("span",{staticClass:"line-number"},[t._v("135")]),n("br"),n("span",{staticClass:"line-number"},[t._v("136")]),n("br"),n("span",{staticClass:"line-number"},[t._v("137")]),n("br"),n("span",{staticClass:"line-number"},[t._v("138")]),n("br"),n("span",{staticClass:"line-number"},[t._v("139")]),n("br"),n("span",{staticClass:"line-number"},[t._v("140")]),n("br"),n("span",{staticClass:"line-number"},[t._v("141")]),n("br"),n("span",{staticClass:"line-number"},[t._v("142")]),n("br"),n("span",{staticClass:"line-number"},[t._v("143")]),n("br"),n("span",{staticClass:"line-number"},[t._v("144")]),n("br"),n("span",{staticClass:"line-number"},[t._v("145")]),n("br"),n("span",{staticClass:"line-number"},[t._v("146")]),n("br"),n("span",{staticClass:"line-number"},[t._v("147")]),n("br"),n("span",{staticClass:"line-number"},[t._v("148")]),n("br"),n("span",{staticClass:"line-number"},[t._v("149")]),n("br"),n("span",{staticClass:"line-number"},[t._v("150")]),n("br"),n("span",{staticClass:"line-number"},[t._v("151")]),n("br"),n("span",{staticClass:"line-number"},[t._v("152")]),n("br"),n("span",{staticClass:"line-number"},[t._v("153")]),n("br"),n("span",{staticClass:"line-number"},[t._v("154")]),n("br")])]),n("h2",{attrs:{id:"_29-8-clprogramfree"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-8-clprogramfree"}},[t._v("#")]),t._v(" 29.8 CLProgramFree")]),t._v(" "),n("p",[t._v("删除一个OpenCL程序.")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLProgramFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  program     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL句柄 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("program")]),t._v(" "),n("p",[t._v("[in] OpenCL句柄。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("无。 在内部错误情况下 _LastError 的值会改变。想要获取有关错误的详细信息，请调用 GetLastError() 函数。")]),t._v(" "),n("h2",{attrs:{id:"_29-9-clkernelcreate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-9-clkernelcreate"}},[t._v("#")]),t._v(" 29.9 CLKernelCreate")]),t._v(" "),n("p",[t._v("创建OpenCL程序内核并返回其句柄。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLKernelCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("           program"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL句柄 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string  kernel_name     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内核名称 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("program")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL句柄。")]),t._v(" "),n("p",[t._v("kernel_name")]),t._v(" "),n("p",[t._v("[in] 适当的OpenCL程序中的内核函数的名称，执行开始。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功将创建一个OpenCL句柄。一旦出错 返回-1。 想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("目前，以下错误代码正在使用:"),n("br"),t._v("\n• ERR_OPENCL_INVALID_HANDLE —— 无效的 OpenCL的句柄。"),n("br"),t._v("\n• ERR_INVALID_PARAMETER —— 无效的字符串参数。"),n("br"),t._v("\n• ERR_OPENCL_TOO_LONG_KERNEL_NAME —— 内核名称超过127个字符。"),n("br"),t._v("\n• ERR_OPENCL_KERNEL_CREATE —— 创建OpenCL对象时发生的内部错误。")]),t._v(" "),n("h2",{attrs:{id:"_29-10-clkernelfree"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-10-clkernelfree"}},[t._v("#")]),t._v(" 29.10 CLKernelFree")]),t._v(" "),n("p",[t._v("删除一个OpenCL启动函数.")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLKernelFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  kernel     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理OpenCL程序的内核 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("kernel_name")]),t._v(" "),n("p",[t._v("[in] 处理OpenCL程序的内核。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("无。 在内部错误情况下 _LastError 的值会改变。想要获取有关错误的详细信息，请调用 GetLastError() 函数。")]),t._v(" "),n("h2",{attrs:{id:"_29-11-clsetkernelarg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-11-clsetkernelarg"}},[t._v("#")]),t._v(" 29.11 CLSetKernelArg")]),t._v(" "),n("p",[t._v("为OpenCL函数设置一个参数。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLSetKernelArg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("   kernel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理一个OpenCL程序内核 ")]),t._v("\n   uint  arg_index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL函数幅角的数量 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  arg_value      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 源代码 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("kernel")]),t._v(" "),n("p",[t._v("[in] 处理一个OpenCL程序内核.")]),t._v(" "),n("p",[t._v("arg_index")]),t._v(" "),n("p",[t._v("[in] 函数参数的编号，编号从零开始。")]),t._v(" "),n("p",[t._v("arg_value")]),t._v(" "),n("p",[t._v("[in] 函数参数的值.")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功则返回true, 否则返回false。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("目前，以下错误代码正在使用:"),n("br"),t._v("\n• ERR_INVALID_PARAMETER —— 无效的参数"),n("br"),t._v("\n• ERR_OPENCL_INVALID_HANDLE —— OpenCL内核的句柄无效"),n("br"),t._v("\n• ERR_OPENCL_SET_KERNEL_PARAMETER —— OpenCL内部错误")]),t._v(" "),n("h2",{attrs:{id:"_29-12-clsetkernelargmem"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-12-clsetkernelargmem"}},[t._v("#")]),t._v(" 29.12 CLSetKernelArgMem")]),t._v(" "),n("p",[t._v("设置一个OpenCL缓冲作为OpenCL函数的参数。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLSetKernelArgMem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("   kernel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理一个OpenCL程序的内核 ")]),t._v("\n   uint  arg_index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL函数参数的数量 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("   cl_mem_handle     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理一个OpenCL缓冲 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("kernel")]),t._v(" "),n("p",[t._v("[in] 处理一个OpenCL程序的内核。")]),t._v(" "),n("p",[t._v("arg_index")]),t._v(" "),n("p",[t._v("[in] 函数参数的编号，编号从零开始。")]),t._v(" "),n("p",[t._v("cl_mem_handle")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL缓冲处理句柄。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功则返回true, 否则返回false。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("h2",{attrs:{id:"_29-13-clsetkernelargmemlocal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-13-clsetkernelargmemlocal"}},[t._v("#")]),t._v(" 29.13 CLSetKernelArgMemLocal")]),t._v(" "),n("p",[t._v("设置本地缓冲区作为内核函数参数。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLSetKernelArgMemLocal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("    kernel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理OpenCL程序的内核 ")]),t._v("\n   uint   arg_index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OpenCL函数参数的数值 ")]),t._v("\n   ulong  local_mem_size    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓冲区大小 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("kernel")]),t._v(" "),n("p",[t._v("[in] 处理OpenCL程序的内核。")]),t._v(" "),n("p",[t._v("arg_index")]),t._v(" "),n("p",[t._v("[in] 函数参数的编号，编号从零开始。")]),t._v(" "),n("p",[t._v("local_mem_size")]),t._v(" "),n("p",[t._v("[in] 缓冲区的字节大小。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功返回true，否则返回false。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("h2",{attrs:{id:"_29-14-clbuffercreate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-14-clbuffercreate"}},[t._v("#")]),t._v(" 29.14 CLBufferCreate")]),t._v(" "),n("p",[t._v("创建一个OpenCL缓冲并返回其句柄。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferCreate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("   context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL 上下文句柄 ")]),t._v("\n   uint  size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓冲大小 ")]),t._v("\n   uint  flags        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定OpenCL缓冲性能的标志组合  ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("context")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL 上下文句柄。")]),t._v(" "),n("p",[t._v("size")]),t._v(" "),n("p",[t._v("[in] 缓冲字节大小。")]),t._v(" "),n("p",[t._v("flags")]),t._v(" "),n("p",[t._v("[in] 使用组合标帜的缓冲性能: CL_MEM_READ_WRITE, CL_MEM_WRITE_ONLY, CL_MEM_READ_ONLY, CL_MEM_ALLOC_HOST_PTR。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功，则返回OpenCL缓冲的句柄。 一旦出错 返回-1。想要获取有关错误的详细信息，请调用 GetLastError() 函数.")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("目前，以下错误代码正在使用:"),n("br"),t._v("\n• ERR_OPENCL_INVALID_HANDLE —— 无效的OpenCL上下文句柄。"),n("br"),t._v("\n• ERR_NOT_ENOUGH_MEMORY —— 内存不足。"),n("br"),t._v("\n• ERR_OPENCL_BUFFER_CREATE —— 创建缓冲区时发生内部错误。"),n("br")]),t._v(" "),n("h2",{attrs:{id:"_29-15-clbufferfree"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-15-clbufferfree"}},[t._v("#")]),t._v(" 29.15 CLBufferFree")]),t._v(" "),n("p",[t._v("删除OpenCL缓冲。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferFree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("   buffer     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL缓冲句柄 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("buffer")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL缓冲句柄。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("无。 在内部错误情况下 _LastError 的值会改变。想要获取有关错误的详细信息，请调用 GetLastError() 函数。")]),t._v(" "),n("h2",{attrs:{id:"_28-16-clbufferwrite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_28-16-clbufferwrite"}},[t._v("#")]),t._v(" 28.16 CLBufferWrite")]),t._v(" "),n("p",[t._v("写入OpenCL缓冲区并返回写入元素的数量。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("uint  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("          buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个OpenCL缓冲句柄 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("  data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值的数组 ")]),t._v("\n   uint         buffer_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字节区偏移的OpenCL缓冲，默认为0 ")]),t._v("\n   uint         data_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 元素中数组的偏移，默认为0 ")]),t._v("\n   uint         data_count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WHOLE_ARRAY     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从阵列写入的值的数量，默认整个阵列 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("buffer")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL缓冲句柄。")]),t._v(" "),n("p",[t._v("data[]")]),t._v(" "),n("p",[t._v("[in] 应该在OpenCL缓冲区中写入的值数组。 通过引用传递。")]),t._v(" "),n("p",[t._v("buffer_offset")]),t._v(" "),n("p",[t._v("[in] OpenCL缓冲区中的偏移量，以字节为单位，从中开始写入。默认情况下，从缓冲区的开头开始写入。")]),t._v(" "),n("p",[t._v("data_offset")]),t._v(" "),n("p",[t._v("[in] 第一个数组元素的索引，从数组中的值开始写入OpenCL缓冲区。默认情况下，从数组的最开始处获取值。")]),t._v(" "),n("p",[t._v("data_count")]),t._v(" "),n("p",[t._v("[in] 应写入的值的数量。 默认情况下，为该数组的所有值。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("写入元素的数量. 错误情况下返回0。想要获取有关错误的详细信息，请调用 GetLastError() 函数。")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("对于一维数组，在读取数据用于写入OpenCL缓冲区的元素时，计算的数量，是在考虑了AS_SERIES标帜的情况下得出的。")]),t._v(" "),n("p",[t._v("一个二维或多维的数组被表示为一维时。在这种情况下，data_offset是表示中应该跳过的元素数量，而不是第一个维度中的元素数量。")]),t._v(" "),n("h2",{attrs:{id:"_29-17-clbufferread"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-17-clbufferread"}},[t._v("#")]),t._v(" 29.17 CLBufferRead")]),t._v(" "),n("p",[t._v("读取OpenCL缓冲区并返回写入元素的数量。")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("uint  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLBufferRead")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("          buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理一个OpenCL缓冲 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("  data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个值的数组 ")]),t._v("\n   uint         buffer_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在字节缓冲区偏移的OpenCL，默认为0 ")]),t._v("\n   uint         data_offset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在元素的数组的偏移量，默认为0 ")]),t._v("\n   uint         data_count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WHOLE_ARRAY     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于读取的缓冲值的个数，默认为整个缓冲区 ")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("buffer")]),t._v(" "),n("p",[t._v("[in] 一个OpenCL缓冲句柄。")]),t._v(" "),n("p",[t._v("data[]")]),t._v(" "),n("p",[t._v("[in] 用于从OpenCL缓冲区接收值的数组。 通过引用传递。")]),t._v(" "),n("p",[t._v("buffer_offset")]),t._v(" "),n("p",[t._v("[in] OpenCL缓冲区中的偏移量，以字节为单位，从中开始写入。默认情况下，从缓冲区的开头开始写入。")]),t._v(" "),n("p",[t._v("data_offset")]),t._v(" "),n("p",[t._v("[in] 第一个数组元素的索引，从数组中的值开始写入OpenCL缓冲区。默认情况下，从数组的最开始处获取值。")]),t._v(" "),n("p",[t._v("data_count")]),t._v(" "),n("p",[t._v("[in] 应读取的值的数量。默认情况下，为该数组的所有值。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("读取元素的数量. 错误情况下返回0。想要获取有关错误的详细信息，请调用 GetLastError() 函数。")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("对于一维数组，在读取数据用于写入OpenCL缓冲区的元素时，计算的数量，是在考虑了AS_SERIES标帜的情况下得出的。")]),t._v(" "),n("p",[t._v("一个二维或多维的数组被表示为一维时。在这种情况下，data_offset是表示中应该跳过的元素数量，而不是第一个维度中的元素数量。")]),t._v(" "),n("h2",{attrs:{id:"_29-18-clexecute"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-18-clexecute"}},[t._v("#")]),t._v(" 29.18 CLExecute")]),t._v(" "),n("p",[t._v("此函数运行一个 OpenCL程序。有三个版本的变体：")]),t._v(" "),n("ol",[n("li",[t._v("用一个内核启动内核函数")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("bool  CLExecute( \n   int          kernel                    // 处理一个OpenCL程序的内核 \n   );\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("启动几个内核副本 (OpenCL函数) 与任务空间描述")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("bool  CLExecute( \n   int          kernel,                   // 处理一个OpenCL程序的内核 \n   uint         work_dim,                 // 任务空间维度 \n   const uint&  global_work_offset[],     // 在任务空间初始偏移 \n   const uint&  global_work_size[]        // 任务总数 \n   );\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("启动几个内核副本 (OpenCL函数) 与任务空间描述以及集合本地任务子集大小规范")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("bool  CLExecute( \n   int          kernel,                   // 处理一个OpenCL程序的内核 \n   uint         work_dim,                 // 任务空间维度 \n   const uint&  global_work_offset[],     // 在任务空间初始偏移 \n   const uint&  global_work_size[],       // 任务总数 \n   const uint&  local_work_size[]         // 在本地集合中的任务数 \n   );\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("kernel")]),t._v(" "),n("p",[t._v("[in] 处理OpenCL内核。")]),t._v(" "),n("p",[t._v("work_dim")]),t._v(" "),n("p",[t._v("[in] 任务空间维度。")]),t._v(" "),n("p",[t._v("global_work_offset[]")]),t._v(" "),n("p",[t._v("[in] 在任务空间初始偏移。")]),t._v(" "),n("p",[t._v("global_work_size[]")]),t._v(" "),n("p",[t._v("[in] 任务子集大小。")]),t._v(" "),n("p",[t._v("local_work_size[]")]),t._v(" "),n("p",[t._v("[in] 集合本地任务子集大小。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("如果成功则返回true, 否则返回false。 想要获取有关错误的详细信息，请调用 GetLastError() 函数。")]),t._v(" "),n("p",[t._v("注意")]),t._v(" "),n("p",[t._v("以下例子中要考虑参数的使用："),n("br"),t._v("\n• work_dim 指定 work_items[] 描述任务的阵列维度. 如果work_dim=3,三维阵列work_items[N1, N2, N3] 将被使用。"),n("br"),t._v("\n• global_work_size[] 包含设定 work_items[]阵列大小的值. 如果 work_dim=3， global_work_size[3] 阵列将是 {40, 100, 320}。 然后我们将得到 work_items[40, 100, 320]。 所以，任务总数是 is 40 x 100 x 320 = 1 280 000。"),n("br"),t._v("\n• local_work_size[] 设定任务的子集将由OpenCL程序的指定内核来执行。 其维度等于 work_items[] 维度并允许共同任务子集精确分割成更小的子集。 事实上，应当选择 local_work_size[] 从而使全局任务设定分割成更小的子集。 "),n("br")]),t._v(" "),n("p",[t._v("local_work_size[3]={10, 10, 10} 将适合当前的例子， 比如work_items[40, 100, 320] 能被 local_items[10, 10, 10] 阵列毫无剩余的收集起来。")]),t._v(" "),n("h2",{attrs:{id:"_29-19-clexecutionstatus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-19-clexecutionstatus"}},[t._v("#")]),t._v(" 29.19 CLExecutionStatus")]),t._v(" "),n("p",[t._v("返回OpenCL程序执行状态。")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("bool  CLExecutionStatus( \n   int   kernel            // 处理OpenCL程序的内核 \n   );\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("参数")]),t._v(" "),n("p",[t._v("kernel")]),t._v(" "),n("p",[t._v("[in] 处理OpenCL程序的内核。")]),t._v(" "),n("p",[t._v("返回值")]),t._v(" "),n("p",[t._v("返回OpenCL程序状态。该值可以是以下值的其中一个："),n("br"),t._v("\n• CL_COMPLETE=0 —— 程序完成，"),n("br"),t._v("\n• CL_RUNNING=1 —— 运行，"),n("br"),t._v("\n• CL_SUBMITTED=2 —— 提交执行，"),n("br"),t._v("\n• CL_QUEUED=3 —— 排队，"),n("br"),t._v("\n• -1 (负1) —— 执行CLExecutionStatus()时出现错误。"),n("br")])])}),[],!1,null,null,null);s.default=e.exports}}]);